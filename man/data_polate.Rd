% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/data_polate.R
\name{data_polate}
\alias{data_polate}
\title{Linearly extrapolate/interpolate variables in a numeric matrix}
\usage{
data_polate(data, xname = NULL, ynames = NULL, xout = NULL)
}
\arguments{
\item{data}{a numeric matrix or data frame that can be coerced to a numeric matrix with column names containing the x variable and y_i variables to extrapolate}

\item{xname}{the name of the column containing the x variable. If \code{is.null(xname)} the first column will be used.}

\item{ynames}{the names of the columns containing the y variables. If \code{is.null(ynames)} all column names other than \code{xname} are used.}

\item{xout}{a numeric vector of values to x values to extrapolate y_i to. If \code{if(is.null(xout)){xout <- x}}, and the function doesn't extrapolate anything.}
}
\description{
Linearly extrapolate/interpolate variables in a numeric matrix \code{data}. This function uses \code{Hmisc::approxExtrap()} and \code{base::apply()} to extrapolate variables y_i to y_n in a data frame based on univariate relationships with a variable x (\code{x}; which is another variables in \code{data}) to a new variable \code{xout}.
}
\note{
Users should be cautious about conducting linear extrapolation for relationships that are known to be non-linear over a large range, because they will undoubtedly deviate from the true non-linear relationships. Linear interpolation will also deviate, though the risks will tend to be less severe especially if the resolution of the original data is relatively fine.
}
\examples{
\dontrun{
mydata <- rdat_RedGrouper$a.series
 out <- data_polate(mydata,xout=seq(min(mydata$age),max(mydata$age),by=0.5))
 par(mfrow=c(1,1))
for(i in colnames(out[,-1])){
 x <- mydata[,1]
 xout <- out[,1]
 yout_i <- out[,i]
 plot(xout,yout_i,ylab=i)
 points(x,mydata[,i],col="red",pch=16)
 readline(prompt="Press [enter] to continue")
}
}
}
\author{
Nikolai Klibansky
}
\keyword{assessment}
\keyword{bam}
\keyword{fisheries}
\keyword{stock}
