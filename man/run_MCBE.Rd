% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/run_MCBE.R
\name{run_MCBE}
\alias{run_MCBE}
\title{Run MCBE uncertainty analysis}
\usage{
run_MCBE(
  CommonName = NULL,
  fileName = "bam",
  dir_bam_sim = "sim",
  dir_bam_base = "base",
  bam = NULL,
  dat_file = NULL,
  tpl_file = NULL,
  cxx_file = NULL,
  dat_obj = NULL,
  tpl_obj = NULL,
  cxx_obj = NULL,
  data_sim = list(cv_U = NULL, cv_L = NULL, cv_D = NULL),
  par_default = list(cv_U = 0.2, cv_L = 0.2, cv_D = 0.2),
  standardize = TRUE,
  nsim = 10,
  sc = 0.1,
  scLim = sc * c(-1, 1) + 1,
  M_scLim = 0.1 * c(-1, 1) + 1,
  steep_scLim = scLim,
  Linf_scLim = scLim,
  K_scLim = scLim,
  t0_scLim = scLim,
  Dmort_scLim = scLim,
  coresUse = NULL,
  ndigits = 4,
  unlink_dir_bam_base = FALSE,
  run_bam_base = TRUE,
  overwrite_bam_base = TRUE,
  admb_switch_base = "-nox",
  run_sim = TRUE,
  admb_switch_sim = "-est -nox -ind",
  prompt_me = FALSE,
  subset_rdat = list(eq.series = 101, pr.series = 101),
  random_seed = 12345
)
}
\arguments{
\item{CommonName}{Common name of species associated with dat, tpl, and cxx files}

\item{fileName}{Name given to BAM files, not including file extensions.}

\item{dir_bam_sim}{Name of directory to write MCBE files to, relative to the working directory.}

\item{dir_bam_base}{Name of directory to write bam base model files to, relative to the working directory.}

\item{bam}{Output of \code{bam2r}.}

\item{dat_file}{dat file path}

\item{tpl_file}{tpl file path}

\item{cxx_file}{cxx file path}

\item{dat_obj}{dat file read in as a character vector with readLines(con=dat_file)}

\item{tpl_obj}{tpl file read in as a character vector with readLines(con=tpl_file)}

\item{cxx_obj}{cxx file read in as a character vector with readLines(con=cxx_file)}

\item{data_sim}{list for supplying optional data not available in input data or rdat (e.g. cvs for simulating time series of landings, discards, and cpue)}

\item{par_default}{list for supplying default values for particular parameters to use if values cannot be found by in the usual locations (e.g. if a time series of landings does not have a corresponding time series of cvs, the default cv_L will be used)}

\item{standardize}{Should \code{\link[bamExtras]{standardize_bam}} be run by the function before running the BAM}

\item{nsim}{number of simulations to run}

\item{sc}{Scalar (multiplier) to compute upper and lower bounds of random uniform distribution from mean value}

\item{M_scLim}{Scalar for M (constant M) limits. Numeric vector of length 2. If M_constant is not available in the base model output, M_scLim values will be used to scale M at age.}

\item{steep_scLim}{Scalar for steep limits. Numeric vector of length 2}

\item{Linf_scLim}{Scalar for Linf (Von Bertalanffy growth function) limits. Numeric vector of length 2}

\item{K_scLim}{Scalar for K (Von Bertalanffy growth function) limits. Numeric vector of length 2}

\item{t0_scLim}{Scalar for t0 (Von Bertalanffy growth function) limits. Numeric vector of length 2}

\item{Dmort_scLim}{Scalar for Dmort limits. Numeric vector of length 2}

\item{coresUse}{number of cores to use for parallel processing}

\item{ndigits}{number of digits to round simulated values to}

\item{unlink_dir_bam_base}{Should dir_bam_base be deleted after this function is run?}

\item{run_bam_base}{If FALSE, the function will look for an executable named fileName.exe in dir_bam_base and use it as the base model.}

\item{overwrite_bam_base}{If FALSE, the files in dir_bam_base will not be overwritten if run_bam_base=TRUE}

\item{admb_switch_base}{Character string pasted to fileName to build \code{run_command} for the base model when running BAM with \code{shell(run_command)}
(i.e. \code{run_command <- paste(fileName, admb_switch)})}

\item{run_sim}{If FALSE, the simulated data will be generated but won't be used in new BAM runs}

\item{admb_switch_sim}{ADMB code snippet used in shell script when running bam}

\item{prompt_me}{Turn on/off prompts that ask for user input before deleting files.}

\item{subset_rdat}{list of rdat objects to subset to decrease rdat file size}

\item{random_seed}{random seed value. If NULL, random seed is not set within the function.}
}
\value{
Invisibly returns a data frame, MCBE_out, containing basic results of sim runs, including total likelihood and maximum gradient values. This data frame is also written to a csv file in \code{dir_bam_sim}.
}
\description{
This function reruns the base model, from user supplied input files or objects, creating all standard BAM ADMB files
most notably the executable (\code{exe}) file used in the MCBE process, stored in \code{dir_bam_base}.
Simulated input data sets are generated for specified fixed parameters and data sets. New BAM data input (\code{dat}) files
are created and the BAM base executable is rerun with each \code{dat} file, using parallel processing. After each simulation
is run, \code{run_BAM} checks if the objective function value (i.e. total likelihood) for a numeric value; if the value is non numeric
(e.g. nan), then the run is considered to have failed. The \code{dat} and results (\code{rdat}) files are for successful
runs are moved to \code{dir_bam_sim}. If any runs fail (which is not common) a folder is created (named \code{dir_bam_sim}
with suffix '_fail') and failed runs are moved there. \code{run_BAM}
and results file (\code{rdat}) are copied to \code{dir_bam_sim}.
}
\examples{
\dontrun{
Run MCBE, writing files to dir_bam_sim
run_MCBE("AtlanticMenhaden", dir_bam_base="AtMe_base", dir_bam_sim="AtMe_sim")
run_MCBE("BlackSeaBass", dir_bam_base="BlSB_base", dir_bam_sim="BlSB_sim")
run_MCBE("BluelineTilefish", dir_bam_base="BlTi_base", dir_bam_sim="BlTi_sim")
run_MCBE("Cobia", dir_bam_base="Cobi_base", dir_bam_sim="Cobi_sim")
run_MCBE("GagGrouper", dir_bam_base="GaGr_base", dir_bam_sim="GaGr_sim")
run_MCBE("GrayTriggerfish", dir_bam_base="GrTr_base", dir_bam_sim="GrTr_sim")
run_MCBE("GreaterAmberjack", dir_bam_base="GrAm_base", dir_bam_sim="GrAm_sim")
run_MCBE("RedGrouper", dir_bam_base="ReGr_base", dir_bam_sim="ReGr_sim")
run_MCBE("RedPorgy", dir_bam_base="RePo_base", dir_bam_sim="RePo_sim")
run_MCBE("RedSnapper", dir_bam_base="ReSn_base", dir_bam_sim="ReSn_sim")
run_MCBE("ScampGrouper", dir_bam_base="ScGr_base", dir_bam_sim="ScGr_sim")
run_MCBE("SnowyGrouper", dir_bam_base="SnGr_base", dir_bam_sim="SnGr_sim")
run_MCBE("Tilefish", dir_bam_base="Tile_base", dir_bam_sim="Tile_sim")
run_MCBE("VermilionSnapper", dir_bam_base="VeSn_base", dir_bam_sim="VeSn_sim")

MCBE_ReSn <- run_MCBE("RedSnapper",steep_scLim = c(1,1))
}
}
\keyword{MCBE}
\keyword{assessment}
\keyword{bam}
\keyword{fisheries}
\keyword{stock}
