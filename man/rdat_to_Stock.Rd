% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rdat_to_Stock.r
\name{rdat_to_Stock}
\alias{rdat_to_Stock}
\title{Build DLMtool Stock object from bam rdat object}
\usage{
rdat_to_Stock(
  rdat,
  Stock = new("Stock"),
  sc = 0,
  scLim = sc * c(-1, 1) + 1,
  M_sc = 0.001 * c(-1, 1) + 1,
  is_M_age_varying = FALSE,
  steep_sc = scLim,
  rec_sigma_sc = scLim,
  rec_AC_sc = scLim,
  Linf_sc = scLim,
  K_sc = scLim,
  t0_sc = scLim,
  len_cv_val_sc = scLim,
  L_50_sc = scLim,
  L50_95_sc = scLim,
  D_sc = scLim,
  Msd = c(0, 0),
  Ksd = c(0, 0),
  Linfsd = c(0, 0),
  length_sc = 0.1,
  Size_area_1 = c(0.5, 0.5),
  Frac_area_1 = c(0.5, 0.5),
  Prob_staying = c(0.5, 0.5),
  SRrel = 1,
  R0 = 1000,
  use_bam_R0 = TRUE,
  AC = 0.2,
  use_bam_AC = TRUE,
  Fdisc = NULL,
  Mat_age1_max = 0.49,
  herm = NULL,
  genus_species = NULL
)
}
\arguments{
\item{rdat}{BAM output rdat (list) object read in with dget()}

\item{Stock}{DLMtool Stock object to start with}

\item{sc}{Scalar (multiplier) to compute upper and lower bounds of random uniform distribution from mean value}

\item{M_sc}{Scalar for M_constant. Numeric vector of length 2}

\item{is_M_age_varying}{logical. Indicate if age varying M should be used. If TRUE, M and M2 will be upper bounds for age-varying M, set as a function of t.series$M from BAM rdat and M_sc. If FALSE M will be a function of parms[\link{"M.constant"}] and M_sc}

\item{steep_sc}{Scalar for steep. Numeric vector of length 2}

\item{rec_sigma_sc}{Scalar for rec_sigma. Numeric vector of length 2}

\item{rec_AC_sc}{Scalar for rec_AC (lag-1 recruitment autocorrelation). Numeric vector of length 2}

\item{Linf_sc}{Scalar for Linf (Von Bertalanffy growth function). Numeric vector of length 2}

\item{K_sc}{Scalar for K (Von Bertalanffy growth function). Numeric vector of length 2}

\item{t0_sc}{Scalar for t0 (Von Bertalanffy growth function). Numeric vector of length 2}

\item{len_cv_val_sc}{Scalar for len_cv_val. Numeric vector of length 2}

\item{L_50_sc}{Scalar for L_50 (length at 50 percent maturity). Numeric vector of length 2}

\item{D_sc}{Scalar for D_95. Numeric vector of length 2}

\item{Msd}{see \code{\link[DLMtool]{Stock-class}}}

\item{Ksd}{see \code{\link[DLMtool]{Stock-class}}}

\item{Linfsd}{see \code{\link[DLMtool]{Stock-class}}}

\item{length_sc}{Scalar (multiplier) to convert length units. MSEtool examples seem to use cm whereas BAM uses mm.}

\item{Size_area_1}{see \code{\link[DLMtool]{Stock-class}}}

\item{Frac_area_1}{see \code{\link[DLMtool]{Stock-class}}}

\item{Prob_staying}{see \code{\link[DLMtool]{Stock-class}}}

\item{SRrel}{see \code{\link[DLMtool]{Stock-class}}}

\item{R0}{"The magnitude of unfished recruitment. Single value. Positive real number"  (\code{\link[DLMtool]{Stock-class}})}

\item{use_bam_R0}{Should the value of R0 from BAM be used? Note that units may vary (e.g. eggs or Age-1)). logical}

\item{AC}{Default autocorrelation for rec devs (in log space)}

\item{use_bam_AC}{Should recruitment autocorrelation be computed from BAM rec devs? If rec devs are not available, default AC value is used. logical}

\item{Fdisc}{see \code{\link[DLMtool]{Stock-class}}. This function will try to get a range of values from "D.mort" values in the parms object, but if it can't it sets the value to numeric(0).}

\item{Mat_age1_max}{Limit maximum value of proportion mature of first age class (usually age-1). Models sometimes fail when maturity of first age class is too high (e.g. >0.5)}

\item{herm}{Is the species hermaphroditic? If "gonochoristic", use female maturity. If "protogynous", use a function of male and female maturity.}

\item{genus_species}{Genus and species names separated by a space (e.g. "Centropristis striata").}

\item{L_50_95_sc}{Scalar for L_50_95 (Length increment from 50 percent to 95 percent maturity). Numeric vector of length 2}
}
\description{
Build DLMtool Stock object from bam rdat object
}
\examples{
\dontrun{
# Build and plot DLMtool Stock (Stock-class object)
Stock_RedPorgy <- rdat_to_Stock(rdat_RedPorgy)
plot(Stock_RedPorgy)

# Build DLMtool operating model (OM-class object)
OM_RedPorgy <- new("OM", Stock_RedPorgy, Generic_Fleet, Precise_Unbiased, Perfect_Imp)
# Run and plot simple management strategy evaluation (MSE)
mse_out <- runMSE(OM_RedPorgy)
NOAA_plot(mse_out)
}
}
\author{
Nikolai Klibansky
}
\keyword{DLMtool}
\keyword{assessment}
\keyword{bam}
\keyword{fisheries}
\keyword{stock}
