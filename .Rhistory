nmsf <- local({
a <- c("_base","_sim")
if(paste0(commonNameAbb_i,c("_sim_fail"))%in%list.files()){
a <- c(nmsf,c("_sim_fail"))
}
paste0(commonNameAbb_i,a)
})
file.copy(
from=nmsf,
to=dir_tmp,
overwrite = TRUE,
recursive = TRUE)
unlink(nmsf,recursive = TRUE)
}
# Do stuff with results
sim_summary_all <- setNames(vector("list",length=length(commonName)),commonName)
for(i in 1:length(commonName)){
commonName_i    <- commonName[i]
commonNameAbb_i <- commonNameAbb[i]
# Summarize MCBE
dir_bam_sim_i <- file.path(dir_tmp,paste0(commonNameAbb_i,"_sim"))
dir_bam_base_i <- file.path(dir_tmp,paste0(commonNameAbb_i,"_base"))
sim_summary_i <- summarize_MCBE(dir_bam_sim=dir_bam_sim_i,
dir_bam_base=dir_bam_base_i,
nm_model="bam")
dput(sim_summary_i,file.path(dir_bam_sim_i,"sim_summary.rdat"))
pdf(file.path(dir_bam_sim_i,"MCBE_plots.pdf"))
plot_MCBE(sim_summary_i,filter_info = NULL)
dev.off()
sim_summary_all[[i]] <- sim_summary_i
}
i
i <- 1
nm_i <- names(sim_summary_all)[i]
x <- sim_summary_all[[i]]
x$parms$Pfa
x$parms$Pfb
x$parms$Pfmb
x$parms$Pfma
x$parms$Pfmb/x$parms$Pfmb[3]
x$parms$Pfmb/x$parms$Pfmb[4]
x$parms$modRunName
?standardize_rdat
i <- 2
nm_i <- names(sim_summary_all)[i]
x <- sim_summary_all[[i]]
x$parms$Pfmb
x$parms$Pfmb/median(x$parms$Pfmb)
seq(.8,1.2,length=nsim)
par_sc <- seq(.8, 1.2, length=nsim)
plot(par_sc,x$parms$SSBend.SSBmsy)
x$parms$SSBend.SSBmsy
par_sc
nsim_tmp <- 7
par_sc <- seq(.8, 1.2, length=nsim_tmp)
plot(par_sc,x$parms$SSBend.SSBmsy)
1:nsim
1:nsim_tmp
median(1:nsim_tmp)
nsim_ref <- median(1:nsim_tmp) # reference value
sim_ref <- median(1:nsim_tmp) # reference value
x$parms$modRunName
x$parms$modRunName[paste(sim_ref)]
sim_ref
which(x$parms$modRunName==paste(sim_ref))
nm_i <- names(sim_summary_all)[i]
x <- sim_summary_all[[i]]
ref <- which(x$parms$modRunName==paste(sim_ref))
ref
x$parms$Pfmb/x$parms$Pfmb[ref]
nm_i <- names(sim_summary_all)[i]
x <- sim_summary_all[[i]]
ref <- which(x$parms$modRunName==paste(sim_ref))
par_sc <- x$parms$Pfmb/x$parms$Pfmb[ref]
plot(par_sc,x$parms$SSBend.SSBmsy)
for(i in 1:length(sim_summary_all){
nm_i <- names(sim_summary_all)[i]
x <- sim_summary_all[[i]]
ref <- which(x$parms$modRunName==paste(sim_ref))
par_sc <- x$parms$Pfmb/x$parms$Pfmb[ref]
plot(par_sc,x$parms$SSBend.SSBmsy,add=(i==1))
}
for(i in 1:length(sim_summary_all)){
nm_i <- names(sim_summary_all)[i]
x <- sim_summary_all[[i]]
ref <- which(x$parms$modRunName==paste(sim_ref))
par_sc <- x$parms$Pfmb/x$parms$Pfmb[ref]
plot(par_sc,x$parms$SSBend.SSBmsy,add=(i==1))
}
(i==1)
warnings()
# Make plots with results from multiple species
for(i in 1:length(sim_summary_all)){
nm_i <- names(sim_summary_all)[i]
x <- sim_summary_all[[i]]
ref <- which(x$parms$modRunName==paste(sim_ref))
par_sc <- x$parms$Pfmb/x$parms$Pfmb[ref]
if(i==1){
plot(par_sc,x$parms$SSBend.SSBmsy,type="o")
}else{
points(par_sc,x$parms$SSBend.SSBmsy,type="o")
}
}
# Make plots with results from multiple species
col <- rainbow(length(sim_summary_all))
# Make plots with results from multiple species
col <- rainbow(length(sim_summary_all))
for(i in 1:length(sim_summary_all)){
nm_i <- names(sim_summary_all)[i]
x <- sim_summary_all[[i]]
ref <- which(x$parms$modRunName==paste(sim_ref))
par_sc <- x$parms$Pfmb/x$parms$Pfmb[ref]
if(i==1){
plot(par_sc,x$parms$SSBend.SSBmsy,type="o",col=col[i])
}else{
points(par_sc,x$parms$SSBend.SSBmsy,type="o",col=col[i])
}
}
col <- rainbow(length(sim_summary_all))
for(i in 1:length(sim_summary_all)){
nm_i <- names(sim_summary_all)[i]
x <- sim_summary_all[[i]]
ref <- which(x$parms$modRunName==paste(sim_ref))
par_sc <- x$parms$Pfmb/x$parms$Pfmb[ref]
if(i==1){
plot(par_sc,x$parms$SSBend.SSBmsy,type="o",col=col[i],ylim=c(0,10))
}else{
points(par_sc,x$parms$SSBend.SSBmsy,type="o",col=col[i])
}
}
i <- 1
nm_i <- names(sim_summary_all)[i]
x <- sim_summary_all[[i]]
ref <- which(x$parms$modRunName==paste(sim_ref))
par_sc <- x$parms$Pfmb/x$parms$Pfmb[ref]
nm_i
ref
x$parms$modRunName
nm_i <- names(sim_summary_all)[i]
x <- sim_summary_all[[i]]
ref <- which(x$parms$modRunName==paste(sim_ref))
par_sc <- x$parms$Pfmb/x$parms$Pfmb[ref]
x$parms$SSBend.SSBmsy
x$parms$Pfmb
par_sc <- x$parms$Pfmb/x$parms$Pfmb[ref]
par_sc
# Make plots with results from multiple species
col <- rainbow(length(sim_summary_all))
for(i in 1:length(sim_summary_all)){
nm_i <- names(sim_summary_all)[i]
x <- sim_summary_all[[i]]
ref <- which(x$parms$modRunName==paste(sim_ref))
par_sc <- x$parms$Pfmb/x$parms$Pfmb[ref]
if(i==1){
plot(par_sc,x$parms$SSBend.SSBmsy,type="o",col=col[i],xlim=c(0.8,1.2),ylim=c(0,10))
}else{
points(par_sc,x$parms$SSBend.SSBmsy,type="o",col=col[i])
}
}
names(sim_summary_all) <- commonNameAbb
names(sim_summary_all)[i]
nm_i <- names(sim_summary_all)[i]
x <- sim_summary_all[[i]]
dir_bam_base_i <- file.path(dir_tmp,paste0(nm_i,"_base"))
list.files(dir_bam_base_i
)
list.files(dir_bam_base_i)
nm_i <- names(sim_summary_all)[i]
dir_bam_base_i <- file.path(dir_tmp,paste0(nm_i,"_base"))
spp_base_i <- dget(file.path(dir_bam_base_i,"bam.rdat"))
points(1,spp_base_i$parms$SSBend.SSBmsy)
# Make plots with results from multiple species
col <- rainbow(length(sim_summary_all))
for(i in 1:length(sim_summary_all)){
nm_i <- names(sim_summary_all)[i]
dir_bam_base_i <- file.path(dir_tmp,paste0(nm_i,"_base"))
spp_base_i <- dget(file.path(dir_bam_base_i,"bam.rdat"))
x <- sim_summary_all[[i]]
ref <- which(x$parms$modRunName==paste(sim_ref))
par_sc <- x$parms$Pfmb/x$parms$Pfmb[ref]
if(i==1){
plot(par_sc,x$parms$SSBend.SSBmsy, type="o", col=col[i], xlim=c(0.8,1.2), ylim=c(0,10))
}else{
points(par_sc,x$parms$SSBend.SSBmsy,type="o",col=col[i])
}
points(1,spp_base_i$parms$SSBend.SSBmsy,pch=16,col=col[i],cex=2)
}
# Make plots with results from multiple species
col <- rainbow(length(sim_summary_all))
for(i in 1:length(sim_summary_all)){
nm_i <- names(sim_summary_all)[i]
dir_bam_base_i <- file.path(dir_tmp,paste0(nm_i,"_base"))
spp_base_i <- dget(file.path(dir_bam_base_i,"bam.rdat"))
x <- sim_summary_all[[i]]
ref <- which(x$parms$modRunName==paste(sim_ref))
par_sc <- x$parms$Pfmb/x$parms$Pfmb[ref]
if(i==1){
plot(par_sc,x$parms$SSBend.SSBmsy, type="o", col=col[i], xlim=c(0.8,1.2), ylim=c(0,10))
}else{
points(par_sc,x$parms$SSBend.SSBmsy,type="o",col=col[i])
}
points(c(1,1),c(x$parms$SSBend.SSBmsy[ref],spp_base_i$parms$SSBend.SSBmsy),pch=16,col=col[i],cex=2)
}
?arrows
points(c(1,1),c(x$parms$SSBend.SSBmsy[ref],spp_base_i$parms$SSBend.SSBmsy),pch=c(16,1),col=col[i],cex=2)
# Make plots with results from multiple species
col <- rainbow(length(sim_summary_all))
for(i in 1:length(sim_summary_all)){
nm_i <- names(sim_summary_all)[i]
dir_bam_base_i <- file.path(dir_tmp,paste0(nm_i,"_base"))
spp_base_i <- dget(file.path(dir_bam_base_i,"bam.rdat"))
x <- sim_summary_all[[i]]
ref <- which(x$parms$modRunName==paste(sim_ref))
par_sc <- x$parms$Pfmb/x$parms$Pfmb[ref]
if(i==1){
plot(par_sc,x$parms$SSBend.SSBmsy, type="o", col=col[i], xlim=c(0.8,1.2), ylim=c(0,10))
}else{
points(par_sc,x$parms$SSBend.SSBmsy,type="o",col=col[i])
}
points(c(1,1),c(x$parms$SSBend.SSBmsy[ref],spp_base_i$parms$SSBend.SSBmsy),pch=c(16,1),col=col[i],cex=2)
}
# Make plots with results from multiple species
col <- rainbow(length(sim_summary_all))
for(i in 1:length(sim_summary_all)){
nm_i <- names(sim_summary_all)[i]
dir_bam_base_i <- file.path(dir_tmp,paste0(nm_i,"_base"))
spp_base_i <- dget(file.path(dir_bam_base_i,"bam.rdat"))
x <- sim_summary_all[[i]]
ref <- which(x$parms$modRunName==paste(sim_ref))
par_sc <- x$parms$Pfmb/x$parms$Pfmb[ref]
if(i==1){
plot(par_sc,x$parms$SSBend.SSBmsy, type="o", col=col[i], xlim=c(0.8,1.2), ylim=c(0,10))
}else{
points(par_sc,x$parms$SSBend.SSBmsy,type="o",col=col[i])
}
points(c(1,1),c(x$parms$SSBend.SSBmsy[ref],spp_base_i$parms$SSBend.SSBmsy),pch=c(16,1),col=col[i],cex=2,type="o",lty=2)
}
legend("top",legend=names(sim_summary_all),col=col)
legend("top",legend=names(sim_summary_all),col=col,pch=16)
legend("top",legend=matrix(names(sim_summary_all),ncol=2),col=col,pch=16)
# Make plots with results from multiple species
col <- rainbow(length(sim_summary_all))
for(i in 1:length(sim_summary_all)){
nm_i <- names(sim_summary_all)[i]
dir_bam_base_i <- file.path(dir_tmp,paste0(nm_i,"_base"))
spp_base_i <- dget(file.path(dir_bam_base_i,"bam.rdat"))
x <- sim_summary_all[[i]]
ref <- which(x$parms$modRunName==paste(sim_ref))
par_sc <- x$parms$Pfmb/x$parms$Pfmb[ref]
if(i==1){
plot(par_sc,x$parms$SSBend.SSBmsy, type="o", col=col[i], xlim=c(0.8,1.2), ylim=c(0,10))
}else{
points(par_sc,x$parms$SSBend.SSBmsy,type="o",col=col[i])
}
points(c(1,1),c(x$parms$SSBend.SSBmsy[ref],spp_base_i$parms$SSBend.SSBmsy),pch=c(16,1),col=col[i],cex=2,type="o",lty=2)
}
legend("top",legend=names(sim_summary_all), ncol=2,
col=col,pch=16)
# Make plots with results from multiple species
col <- rainbow(length(sim_summary_all))
for(i in 1:length(sim_summary_all)){
nm_i <- names(sim_summary_all)[i]
dir_bam_base_i <- file.path(dir_tmp,paste0(nm_i,"_base"))
spp_base_i <- dget(file.path(dir_bam_base_i,"bam.rdat"))
x <- sim_summary_all[[i]]
ref <- which(x$parms$modRunName==paste(sim_ref))
par_sc <- x$parms$Pfmb/x$parms$Pfmb[ref]
if(i==1){
plot(par_sc,x$parms$SSBend.SSBmsy, type="o", col=col[i], xlim=c(0.8,1.2), ylim=c(0,10))
}else{
points(par_sc,x$parms$SSBend.SSBmsy,type="o",col=col[i])
}
points(c(1,1),c(x$parms$SSBend.SSBmsy[ref],spp_base_i$parms$SSBend.SSBmsy),pch=c(16,1),col=col[i],cex=1.5,type="o",lty=2)
}
legend("top",legend=names(sim_summary_all), ncol=2,
col=col,pch=16)
# Make plots with results from multiple species
col <- rainbow(length(sim_summary_all),start=1,stop=0.8)
for(i in 1:length(sim_summary_all)){
nm_i <- names(sim_summary_all)[i]
dir_bam_base_i <- file.path(dir_tmp,paste0(nm_i,"_base"))
spp_base_i <- dget(file.path(dir_bam_base_i,"bam.rdat"))
x <- sim_summary_all[[i]]
ref <- which(x$parms$modRunName==paste(sim_ref))
par_sc <- x$parms$Pfmb/x$parms$Pfmb[ref]
if(i==1){
plot(par_sc,x$parms$SSBend.SSBmsy, type="o", col=col[i], xlim=c(0.8,1.2), ylim=c(0,10))
}else{
points(par_sc,x$parms$SSBend.SSBmsy,type="o",col=col[i])
}
points(c(1,1),c(x$parms$SSBend.SSBmsy[ref],spp_base_i$parms$SSBend.SSBmsy),pch=c(16,1),col=col[i],cex=1.5,type="o",lty=2)
}
legend("top",legend=names(sim_summary_all), ncol=2,
col=col,pch=16)
?rainbow
# Make plots with results from multiple species
col <- rainbow(length(sim_summary_all),start=1,end=0.8)
for(i in 1:length(sim_summary_all)){
nm_i <- names(sim_summary_all)[i]
dir_bam_base_i <- file.path(dir_tmp,paste0(nm_i,"_base"))
spp_base_i <- dget(file.path(dir_bam_base_i,"bam.rdat"))
x <- sim_summary_all[[i]]
ref <- which(x$parms$modRunName==paste(sim_ref))
par_sc <- x$parms$Pfmb/x$parms$Pfmb[ref]
if(i==1){
plot(par_sc,x$parms$SSBend.SSBmsy, type="o", col=col[i], xlim=c(0.8,1.2), ylim=c(0,10))
}else{
points(par_sc,x$parms$SSBend.SSBmsy,type="o",col=col[i])
}
points(c(1,1),c(x$parms$SSBend.SSBmsy[ref],spp_base_i$parms$SSBend.SSBmsy),pch=c(16,1),col=col[i],cex=1.5,type="o",lty=2)
}
legend("top",legend=names(sim_summary_all), ncol=2,
col=col,pch=16)
rdat_BlackSeaBass$parms$SSBend.SSBmsy
parms_i <- x$parms
nm_y <- "SSBend.SSBmsy"
parms_i[,nm_y]
# Make plots with results from multiple species
col <- rainbow(length(sim_summary_all),start=1,end=0.8)
nm_y <- "SSBend.SSBmsy"
for(i in 1:length(sim_summary_all)){
nm_i <- names(sim_summary_all)[i]
dir_bam_base_i <- file.path(dir_tmp,paste0(nm_i,"_base"))
spp_base_i <- dget(file.path(dir_bam_base_i,"bam.rdat"))
x <- sim_summary_all[[i]]
parms_i <- x$parms
ref <- which(x$parms$modRunName==paste(sim_ref))
par_sc <- x$parms$Pfmb/x$parms$Pfmb[ref]
if(i==1){
plot(par_sc,parms_i[,nm_y], type="o", col=col[i], xlim=c(0.8,1.2), ylim=c(0,10))
}else{
points(par_sc,parms_i[,nm_y],type="o",col=col[i])
}
points(c(1,1),c(parms_i[ref,nm_y],spp_base_i$parms[,nm_y]),pch=c(16,1),col=col[i],cex=1.5,type="o",lty=2)
}
legend("top",legend=names(sim_summary_all), ncol=2,
col=col,pch=16)
points(c(1,1),c(parms_i[ref,nm_y],spp_base_i$parms[[nm_y]]),pch=c(16,1),col=col[i],cex=1.5,type="o",lty=2)
# Make plots with results from multiple species
col <- rainbow(length(sim_summary_all),start=1,end=0.8)
nm_y <- "SSBend.SSBmsy"
for(i in 1:length(sim_summary_all)){
nm_i <- names(sim_summary_all)[i]
dir_bam_base_i <- file.path(dir_tmp,paste0(nm_i,"_base"))
spp_base_i <- dget(file.path(dir_bam_base_i,"bam.rdat"))
x <- sim_summary_all[[i]]
parms_i <- x$parms
ref <- which(x$parms$modRunName==paste(sim_ref))
par_sc <- x$parms$Pfmb/x$parms$Pfmb[ref]
if(i==1){
plot(par_sc,parms_i[,nm_y], type="o", col=col[i], xlim=c(0.8,1.2), ylim=c(0,10))
}else{
points(par_sc,parms_i[,nm_y],type="o",col=col[i])
}
points(c(1,1),c(parms_i[ref,nm_y],spp_base_i$parms[[nm_y]]),pch=c(16,1),col=col[i],cex=1.5,type="o",lty=2)
}
legend("top",legend=names(sim_summary_all), ncol=2,
col=col,pch=16)
parms_i$steep
# Make plots with results from multiple species
col <- rainbow(length(sim_summary_all),start=1,end=0.8)
for(i in 1:length(sim_summary_all)){
nm_i <- names(sim_summary_all)[i]
dir_bam_base_i <- file.path(dir_tmp,paste0(nm_i,"_base"))
spp_base_i <- dget(file.path(dir_bam_base_i,"bam.rdat"))
x <- sim_summary_all[[i]]
parms_i <- x$parms
print(paste(nm_i,parms_i$steep))
nm_y <- "SSBend.SSBmsy"
ref <- which(x$parms$modRunName==paste(sim_ref))
par_sc <- x$parms$Pfmb/x$parms$Pfmb[ref]
if(i==1){
plot(par_sc,parms_i[,nm_y], type="o", col=col[i], xlim=c(0.8,1.2), ylim=c(0,10))
}else{
points(par_sc,parms_i[,nm_y],type="o",col=col[i])
}
points(c(1,1),c(parms_i[ref,nm_y],spp_base_i$parms[[nm_y]]),pch=c(16,1),col=col[i],cex=1.5,type="o",lty=2)
}
legend("top",legend=names(sim_summary_all), ncol=2,
col=col,pch=16)
spp_base_i$parm.cons$steep
spp_base_i$parm.cons$steep
spp_base_i$parm.cons$steep[8]
spp_base_i$parms$BH.steep
rdat_GrayTriggerfish$parms$SSB.F30
rdat_GrayTriggerfish$t.series$SSB.SSBF30
spp_base_i$t.series$SSB.SSBF30
spp_base_i$t.series[paste(spp_base_i$parms$endyr),"SSB.SSBF30"]
rdat_AtlanticMenhaden$parms
commonName <-  c(#"AtlanticMenhaden",
"BlackSeaBass",
"BluelineTilefish",
"Cobia",
"GagGrouper",
"GrayTriggerfish",
"GreaterAmberjack",
"RedGrouper",
"RedPorgy",
"RedSnapper",
"ScampGrouper",
"SnowyGrouper",
"SpanishMackerel",
"Tilefish",
"VermilionSnapper"
)
commonNameAbb <- abbreviate(commonName)
random_seed <- 12345
coresUse <- NULL
dir_base <- "base"
dir_MCBE <- "MCBE"
i <- 1
commonName_i    <- commonName[i]
commonNameAbb_i <- commonNameAbb[i]
# Do stuff with results
sim_summary_all <- setNames(vector("list",length=length(commonName)),commonNameAbb)
for(i in 1:length(commonName)){
commonName_i    <- commonName[i]
commonNameAbb_i <- commonNameAbb[i]
# Summarize MCBE
dir_bam_sim_i <- file.path(dir_tmp,paste0(commonNameAbb_i,"_sim"))
dir_bam_base_i <- file.path(dir_tmp,paste0(commonNameAbb_i,"_base"))
sim_summary_i <- summarize_MCBE(dir_bam_sim=dir_bam_sim_i,
dir_bam_base=dir_bam_base_i,
nm_model="bam")
dput(sim_summary_i,file.path(dir_bam_sim_i,"sim_summary.rdat"))
pdf(file.path(dir_bam_sim_i,"MCBE_plots.pdf"))
plot_MCBE(sim_summary_i,filter_info = NULL)
dev.off()
sim_summary_all[[i]] <- sim_summary_i
}
# Make plots with results from multiple species
col <- rainbow(length(sim_summary_all),start=1,end=0.8)
rdat_BluelineTilefish$parms$BH.steep
rdat_BluelineTilefish$parms$SSBend.SSBmsy
rdat_Cobia$parm.cons$steep
rdat_Cobia$parms$SSBend.MSST
rdat_Cobia$parms$SSBend.SSBmsy
rdat_Cobia$t.series$SSB.SSBF30
rdat_GrayTriggerfish$spr.brps
rdat_RedGrouper$spr.brps
str(x$parms)
str(x$spr.brps)
?merge
names(x$parms)
x$parms[names(x$parms)%in%names(x$spr.brps)]
x$parms[!names(x$parms)%in%names(x$spr.brps)]
ps_i <- cbind(x$parms[!names(x$parms)%in%names(x$spr.brps)],x$spr.brps)
ps_i
ps_i <- cbind(x$parms,x$spr.brps[!names(x$spr.brps)%in%names(x$parms)])
ps_i
bs_i <- dget(file.path(dir_bam_base_i,"bam.rdat"))
bs_i <- dget(file.path(dir_bam_base_i,"bam.rdat"))
cbind(bs_i$parms,bs_i$spr.brps[!names(bs_i$spr.brps)%in%names(bs_i$parms)])
c(bs_i$parms,bs_i$spr.brps[!names(bs_i$spr.brps)%in%names(bs_i$parms)])
ps_bs_i <- c(bs_i$parms,bs_i$spr.brps[!names(bs_i$spr.brps)%in%names(bs_i$parms)])
nm_i <- names(sim_summary_all)[i]
dir_bam_base_i <- file.path(dir_tmp,paste0(nm_i,"_base"))
bs_i <- dget(file.path(dir_bam_base_i,"bam.rdat"))
ps_bs_i <- c(bs_i$parms,bs_i$spr.brps[!names(bs_i$spr.brps)%in%names(bs_i$parms)])
x <- sim_summary_all[[i]]
ps_i <- cbind(x$parms,x$spr.brps[!names(x$spr.brps)%in%names(x$parms)])
print(paste(nm_i,ps_i$steep))
nm_y <- if(round(bs_i$parm.cons$steep[8],2)==0.99){
"SSBend.SSBmsy"
}else{
"SSBend.SSBF30"
}
nm_y
ref <- which(x$parms$modRunName==paste(sim_ref))
par_sc <- x$parms$Pfmb/x$parms$Pfmb[ref]
if(i==1){
plot(par_sc,ps_i[,nm_y], type="o", col=col[i], xlim=c(0.8,1.2), ylim=c(0,10))
}else{
points(par_sc,ps_i[,nm_y],type="o",col=col[i])
}
points(c(1,1),c(ps_i[ref,nm_y],ps_bs_i[[nm_y]]),pch=c(16,1),col=col[i],cex=1.5,type="o",lty=2)
# Make plots with results from multiple species
col <- rainbow(length(sim_summary_all),start=1,end=0.8)
for(i in 1:length(sim_summary_all)){
nm_i <- names(sim_summary_all)[i]
dir_bam_base_i <- file.path(dir_tmp,paste0(nm_i,"_base"))
bs_i <- dget(file.path(dir_bam_base_i,"bam.rdat"))
ps_bs_i <- c(bs_i$parms,bs_i$spr.brps[!names(bs_i$spr.brps)%in%names(bs_i$parms)])
x <- sim_summary_all[[i]]
ps_i <- cbind(x$parms,x$spr.brps[!names(x$spr.brps)%in%names(x$parms)])
print(paste(nm_i,ps_i$steep))
nm_y <- if(round(bs_i$parm.cons$steep[8],2)==0.99){
"SSBend.SSBmsy"
}else{
"SSBend.SSBF30"
}
ref <- which(x$parms$modRunName==paste(sim_ref))
par_sc <- x$parms$Pfmb/x$parms$Pfmb[ref]
if(i==1){
plot(par_sc,ps_i[,nm_y], type="o", col=col[i], xlim=c(0.8,1.2), ylim=c(0,10))
}else{
points(par_sc,ps_i[,nm_y],type="o",col=col[i])
}
points(c(1,1),c(ps_i[ref,nm_y],ps_bs_i[[nm_y]]),pch=c(16,1),col=col[i],cex=1.5,type="o",lty=2)
}
legend("top",legend=names(sim_summary_all), ncol=2,
col=col,pch=16)
ps_i[,nm_y]
ps_i
x$parms
x$spr.brps[!names(x$spr.brps)%in%names(x$parms)]
names(x)
x <- sim_summary_all[[i]]
i
names(x)
x$spr.brps
length(1990:2021)
