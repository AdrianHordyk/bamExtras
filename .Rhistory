col_band_alpha=seq(0,1,length=20);sprintf("%02.0x",as.hexmode(round(col_band_alpha*255)))
col_band_alpha=seq(0,1,length=20);sprintf("%02.0X",as.hexmode(round(col_band_alpha*255)))
col_band_alpha=seq(0,1,length=20);sprintf("%02.0d",as.hexmode(round(col_band_alpha*255)))
col_band_alpha=seq(0,1,length=20);sprintf("%02.0i",as.hexmode(round(col_band_alpha*255)))
col_band_alpha=seq(0,1,length=20);sprintf("%02.0o",as.hexmode(round(col_band_alpha*255)))
col_band_alpha=seq(0,1,length=20);sprintf("%02.0a",as.hexmode(round(col_band_alpha*255)))
col_band_alpha=seq(0,1,length=20);sprintf("%02.0s",as.hexmode(round(col_band_alpha*255)))
as.hexmode(round(col_band_alpha*255))
col_band_alpha=seq(0,1,length=20);sprintf("%02.0x",as.hexmode(round(col_band_alpha*255)))
col_band_alpha=seq(0,1,length=20);sprintf("%#02.0x",as.hexmode(round(col_band_alpha*255)))
col_band_alpha=seq(0,1,length=20);sprintf("#02.0x",as.hexmode(round(col_band_alpha*255)))
col_band_alpha=seq(0,1,length=20);sprintf("%02.0x",as.hexmode(round(col_band_alpha*255)))
col_band_alpha=seq(0,1,length=20);sprintf("%2.0x",as.hexmode(round(col_band_alpha*255)))
col_band_alpha=seq(0,1,length=20);sprintf("%002.0x",as.hexmode(round(col_band_alpha*255)))
col_band_alpha=seq(0,1,length=20);sprintf("%04.0x",as.hexmode(round(col_band_alpha*255)))
col_band_alpha=seq(0,1,length=20);as.hexmode(round(col_band_alpha*255))
col_band_alpha=seq(0,.01,length=20);as.hexmode(round(col_band_alpha*255))
col_band_alpha=seq(0,.05,length=20);as.hexmode(round(col_band_alpha*255))
col_band_alpha=seq(0,.05,length=20);hex <- as.hexmode(round(col_band_alpha*255))
nchar(c("0","1","a1","aa"))
col_band_alpha=seq(0,.05,length=20);hex <- as.hexmode(round(col_band_alpha*255))
hex
nchar(hex)
class(hex)
as.character(hex)
nchar)as.character(hex))
nchar(as.character(hex))
str(hex)
nchar(as.character(hex))==1
col_band_alpha=seq(0,.05,length=20);hex <- as.character(as.hexmode(round(col_band_alpha*255)))
hex
nchar(hex)==1)
nchar(hex)==1
hex[nchar(hex)==1]
library(bamExtras)
source("~/GitHub/myPackages/bamExtras/R/tseries_plot.r", echo=TRUE)
rdat <- rdat_BlackSeaBass
tser <- rdat$t.series
U <- tser[,grepl("^U.*ob$",names(tser))]
Ucv <- tser[,grepl("^cv.U.",names(tser))]
tseries_plot(U,Ucv,xlab="year",ylab="index of abundance",plotLabel=rdat$info$species)
source("~/GitHub/myPackages/bamExtras/R/tseries_plot.r", echo=TRUE)
rdat <- rdat_BlackSeaBass
tser <- rdat$t.series
U <- tser[,grepl("^U.*ob$",names(tser))]
Ucv <- tser[,grepl("^cv.U.",names(tser))]
tseries_plot(U,Ucv,xlab="year",ylab="index of abundance",plotLabel=rdat$info$species)
source("~/GitHub/myPackages/bamExtras/R/tseries_plot.r", echo=TRUE)
rdat <- rdat_BlackSeaBass
tser <- rdat$t.series
U <- tser[,grepl("^U.*ob$",names(tser))]
Ucv <- tser[,grepl("^cv.U.",names(tser))]
tseries_plot(U,Ucv,xlab="year",ylab="index of abundance",plotLabel=rdat$info$species)
rdat <- rdat_BlackSeaBass
tser <- rdat$t.series
U <- tser[,grepl("^U.*ob$",names(tser))]
Ucv <- tser[,grepl("^cv.U.",names(tser))]
tseries_plot(U,Ucv,xlab="year",ylab="index of abundance",plotLabel=rdat$info$species,col_band_alpha=0.1)
rdat <- rdat_BlackSeaBass
tser <- rdat$t.series
U <- tser[,grepl("^U.*ob$",names(tser))]
Ucv <- tser[,grepl("^cv.U.",names(tser))]
tseries_plot(U,Ucv,xlab="year",ylab="index of abundance",plotLabel=rdat$info$species,col_band_alpha=0.5)
rdat <- rdat_BlackSeaBass
tser <- rdat$t.series
U <- tser[,grepl("^U.*ob$",names(tser))]
Ucv <- tser[,grepl("^cv.U.",names(tser))]
tseries_plot(U,Ucv,xlab="year",ylab="index of abundance",plotLabel=rdat$info$species,col_band_alpha=0.8)
rdat <- rdat_BlackSeaBass
tser <- rdat$t.series
U <- tser[,grepl("^U.*ob$",names(tser))]
Ucv <- tser[,grepl("^cv.U.",names(tser))]
tseries_plot(U,Ucv,xlab="year",ylab="index of abundance",plotLabel=rdat$info$species,col_band_alpha=1)
library(bamExtras)
library(bamExtras)
library(bamExtras)
source("~/GitHub/myPackages/bamExtras/R/bamdat2mat.r", echo=TRUE)
library(bamExtras)
source("~/GitHub/myPackages/bamExtras/R/bamdat2mat.r", echo=TRUE)
library(bamExtras)
library(bamExtras)
CommonName="GrayTriggerfish"
if(!is.null(CommonName)){
bam <- bam2r(CommonName)
bam <- standardize_bam(
dat_obj=bam$dat,
tpl_obj=bam$tpl,
cxx_obj=bam$cxx
)
}
if(is.list(bam)){
init <- bam$init
}
names(init)
gsub("^.*(Mcvt)",,"Mcvtnfish_Mcvt_agec_allyr(styr,endyr);")
gsub("^.*(Mcvt)","xxx","Mcvtnfish_Mcvt_agec_allyr(styr,endyr);")
gsub("^.*(Mcvt)","xxx","theMcvtnfish_Mcvt_agec_allyr(styr,endyr);")
gsub("Mcvt","xxx","theMcvtnfish_Mcvt_agec_allyr(styr,endyr);")
gsub("[^e]Mcvt","xxx","theMcvtnfish_Mcvt_agec_allyr(styr,endyr);")
gsub("[^a-ZA-Z]Mcvt","xxx","theMcvtnfish_Mcvt_agec_allyr(styr,endyr);")
gsub("[^a-zA-Z]Mcvt","xxx","theMcvtnfish_Mcvt_agec_allyr(styr,endyr);")
gsub("[^a-zA-Z]Mcvt?","xxx","theMcvtnfish_Mcvt_agec_allyr(styr,endyr);")
gsub("[^a-zA-Z]Mcvt?*","xxx","theMcvtnfish_Mcvt_agec_allyr(styr,endyr);")
gsub("[^a-zA-Z]Mcvt*?","xxx","theMcvtnfish_Mcvt_agec_allyr(styr,endyr);")
gsub("\AMcvt\Z","xxx","theMcvtnfish_Mcvt_agec_allyr(styr,endyr);")
gsub("\\AMcvt\\Z","xxx","theMcvtnfish_Mcvt_agec_allyr(styr,endyr);")
gsub("\\bMcvt\\b","xxx","theMcvtnfish_Mcvt_agec_allyr(styr,endyr);")
gsub("(?<=_)Mcvt(?=_)","xxx","theMcvtnfish_Mcvt_agec_allyr(styr,endyr);")
gsub("(?<=_)Mcvt(?=_)","xxx","theMcvtnfish_Mcvt_agec_allyr(styr,endyr);",perl=TRUE)
gsub("(?<=_,)Mcvt(?=_)","xxx","theMcvtnfish_Mcvt_agec_allyr(styr,endyr);",perl=TRUE)
gsub("(?<=[_,])Mcvt(?=_)","xxx","theMcvtnfish_Mcvt_agec_allyr(styr,endyr);",perl=TRUE)
gsub("(?<=[^a-zA-Z])Mcvt(?=[^a-zA-Z])","xxx","theMcvtnfish_Mcvt_agec_allyr(styr,endyr);",perl=TRUE)
gsub("(?<=[^a-zA-Z])Mcvt(?=[^a-zA-Z])","xxx","theMcvtnfish_Mcvt_agec_allyrMcvt(styr,endyr);",perl=TRUE)
gsub("(?<=[^a-zA-Z])Mcvt(?=[^a-zA-Z])","xxx","theMcvtnfish_Mcvt_agec_allyr,Mcvt(styr,endyr);",perl=TRUE)
paste0("(?<=[^a-zA-Z]),paste(fleet_key[[i]],collapse=""),"(?=[^a-zA-Z])")
paste0("(?<=[^a-zA-Z])",paste(fleet_key[[i]],collapse="|"),"(?=[^a-zA-Z])")
fleet_key=list("sCT"=c("CVT"),              # Chevron trap (could possibly include video)
"sTV"=c("CVID","Mcvt","sCT"),# Combined chevron trap/video data (sCT in Red Porgy; Mcvt used in Black Seabass bass for the combined index but also for the comps which are really only from the trap)
"sVD"=c("VID"),              # Video data (from chevron trap survey)
"sBT"=c("Mbft"),             # MARMAP blackfish trap (see Black Seabass)
"sBL"=c("sM"),               # MARMAP bottom longline survey (see Tilefish)
"sVL"=c("vll"),              # MARMAP vertical longline survey (see Snowy Grouper)
"sFT"=c("FST"),              # MARMAP Florida Snapper Trap (see Vermilion Snapper)
"cDV"=c("cD"),               # Commercial diving (see Gag)
"cHL"=c("cH","cHl"),         # Commercial handlines (a.k.a. commercial lines)
"cLL"=c("cL"),               # Commercial longlines (see Blueline Tilefish)
"cOT"=c("cO"),               # Commercial other (see Red Grouper)
"cPT"=c("cp","cP"),          # Commercial pots (see Black Seabass)
"cTW"=c("cT","cTw", "cHTR"), # Commercial trawl (see Black Seabass, Red Porgy, Vermilion Snapper)
"cGN"=c("comm"),             # Commercial all. general commercial (see Black Seabass "D.comm.ob")
"rHB"=c("HB","hb","rHb"),    # Recreational headboat
"rHB_D"=c("hbd","HBD"),      # Recreational headboat discards (atypical abbreviation found in Black Sea Bass selectivity parameters)
"rGN"=c("GR","mrip","rGe","rA")  # Recreational all (a.k.a. general recreational (i.e. not headboat)
)
i <- 2
paste0("(?<=[^a-zA-Z])",paste(fleet_key[[i]],collapse="|"),"(?=[^a-zA-Z])")
gsub("(?<=[^a-zA-Z])Mcvt(?=[^a-zA-Z])","xxx","theMcvtnfish_Mcvt_agec_allyr,Mcvt(styr,endyr);",perl=TRUE)
# pattern_beg_i <- paste0("^(",paste(fleet_key[[i]],collapse="|"),")\\.")
# pattern_mid_i <- paste0("\\.(",paste(fleet_key[[i]],collapse="|"),")\\.")
# pattern_end_i <- paste0("\\.(",paste(fleet_key[[i]],collapse="|"),")([0-9]*)$")
pattern <- paste0("(?<=[^a-zA-Z])",paste(fleet_key[[i]],collapse="|"),"(?=[^a-zA-Z])")
pattern
gsub(pattern,"xxx","theMcvtnfish_Mcvt_agec_allyr,Mcvt(styr,endyr);",perl=TRUE)
pattern <- paste0("(?<=[^a-zA-Z])","Mcvt","(?=[^a-zA-Z])")
gsub(pattern,"xxx","theMcvtnfish_Mcvt_agec_allyr,Mcvt(styr,endyr);",perl=TRUE)
gsub(pattern,"xxx","theMcvtnfish_Mcvt1_agec_allyr,Mcvt(styr,endyr);",perl=TRUE)
pattern <- paste0("(?<=[^a-zA-Z])","Mcvt|pickle","(?=[^a-zA-Z])")
gsub(pattern,"xxx","theMcvtnfish_Mcvt1_agec_allyr,Mcvt(styr,endyr);",perl=TRUE)
paste(fleet_key[[i]],collapse="|")
gsub(paste0("(?<=[^a-zA-Z])","Mcvt|pickle","(?=[^a-zA-Z])"),"xxx","theMcvtnfish_Mcvt_agec_allyr,Mcvt(styr,endyr);",perl=TRUE)
gsub(paste0("(?<=[^a-zA-Z])","CVID|Mcvt","(?=[^a-zA-Z])"),"xxx","theMcvtnfish_Mcvt_agec_allyr,Mcvt(styr,endyr);",perl=TRUE)
gsub(paste0("(?<=[^a-zA-Z])","CVID|Mcvt|sCT","(?=[^a-zA-Z])"),"xxx","theMcvtnfish_Mcvt_agec_allyr,Mcvt(styr,endyr);",perl=TRUE)
fleet_key[[i]]
fleet_key_i <- fleet_key[[i]]
fleet_key_i
i
names(fleet_key)
i <- names(fleet_key)[2]
i
fleet_key_i <- fleet_key[[i]]
fleet_key_i
patterns_i <- fleet_key[[i]]
patterns_i
# pattern_beg_i <- paste0("^(",paste(fleet_key[[i]],collapse="|"),")\\.")
# pattern_mid_i <- paste0("\\.(",paste(fleet_key[[i]],collapse="|"),")\\.")
# pattern_end_i <- paste0("\\.(",paste(fleet_key[[i]],collapse="|"),")([0-9]*)$")
# pattern <- paste0("(?<=[^a-zA-Z])",paste(fleet_key[[i]],collapse="|"),"(?=[^a-zA-Z])")
pattern_i <- fleet_key[[i]]
pattern_ij <- pattern_i[1]
pattern_ij
i
replacement_i <- i
pattern_ij
cxx <- gsub(paste0("(?<=[^a-zA-Z])",pattern_ij,"(?=[^a-zA-Z])"),replacement_i,cxx,perl=TRUE)
source("~/GitHub/myPackages/bamExtras/R/standardize_bam.r", echo=TRUE)
bam_GrTr <- standardize_bam("GrayTriggerfish")
rdat_GrTr <- run_bam(bam=bam_GrTr,fileName="GrTr")
library(bamExtras)
library(bamExtras)
CommonName="RedPorgy"
if(!is.null(CommonName)){
dat <- get(paste0("dat_",CommonName))
tpl <- get(paste0("tpl_",CommonName))
cxx <- get(paste0("cxx_",CommonName))
}
if(!is.null(dat_obj)&!is.null(tpl_obj)&!is.null(cxx_obj)){
dat <- dat_obj
tpl <- tpl_obj
cxx <- cxx_obj
}
# Read in dat, tpl, and cxx files
if(!is.null(dat_file)&!is.null(tpl_file)&!is.null(cxx_file)){
dat <- readLines(con=dat_file)
tpl <- readLines(con=tpl_file)
cxx <- readLines(con=cxx_file)
}
dat <- trimws(dat) # Remove leading and/or trailing whitespace from character strings
# Run bam2r to generate init
bamr <- bam2r(
dat_obj = dat,
tpl_obj = tpl,
cxx_obj = cxx)
dat <- bamr$dat
dat <- trimws(dat) # Remove leading and/or trailing whitespace from character strings
tpl <- bamr$tpl
cxx <- bamr$cxx
init <- bamr$init
# Restructure variable names so that fleet name is at the end (this makes it easier to identify similar variables in search)
inm <- names(init)
dat_obj=NULL; tpl_obj=NULL;cxx_obj=NULL
dat_file=NULL;tpl_file=NULL;cxx_file=NULL
if(!is.null(CommonName)){
dat <- get(paste0("dat_",CommonName))
tpl <- get(paste0("tpl_",CommonName))
cxx <- get(paste0("cxx_",CommonName))
}
if(!is.null(dat_obj)&!is.null(tpl_obj)&!is.null(cxx_obj)){
dat <- dat_obj
tpl <- tpl_obj
cxx <- cxx_obj
}
# Read in dat, tpl, and cxx files
if(!is.null(dat_file)&!is.null(tpl_file)&!is.null(cxx_file)){
dat <- readLines(con=dat_file)
tpl <- readLines(con=tpl_file)
cxx <- readLines(con=cxx_file)
}
dat <- trimws(dat) # Remove leading and/or trailing whitespace from character strings
# Run bam2r to generate init
bamr <- bam2r(
dat_obj = dat,
tpl_obj = tpl,
cxx_obj = cxx)
dat <- bamr$dat
dat <- trimws(dat) # Remove leading and/or trailing whitespace from character strings
tpl <- bamr$tpl
cxx <- bamr$cxx
init <- bamr$init
# Restructure variable names so that fleet name is at the end (this makes it easier to identify similar variables in search)
inm <- names(init)
## Landings
# styr_L
nm1_styr_L <- inm[grepl("^styr_.*_L$",inm)]
nm2_styr_L <- paste0("styr_L_",gsub("^styr_|_L$","",nm1_styr_L))
# endyr_L
nm1_endyr_L <- inm[grepl("^endyr_.*_L$",inm)]
nm2_endyr_L <- paste0("endyr_L_",gsub("^endyr_|_L$","",nm1_endyr_L))
# obs_L
nm1_obs_L <- inm[grepl("^obs_.*_L$",inm)]
nm2_obs_L <- paste0("obs_L_",gsub("^obs_|_L$","",nm1_obs_L))
# obs_cv_L (landings cvs)
nm1_obs_cv_L <- inm[grepl("_L_cv$",inm)]
nm2_obs_cv_L <- paste0("obs_cv_L_",gsub("_L_cv$","",nm1_obs_cv_L))
## Discards
# styr_D
nm1_styr_D <- inm[grepl("^styr_.*_D$",inm)]
nm2_styr_D <- paste0("styr_D_",gsub("^styr_|_D$","",nm1_styr_D))
# endyr_D
nm1_endyr_D <- inm[grepl("^endyr_.*_D$",inm)]
nm2_endyr_D <- paste0("endyr_D_",gsub("^endyr_|_D$","",nm1_endyr_D))
# obs_released (undead discards)
nm1_obs_D <- inm[grepl("^obs_.*_released$",inm)]
nm2_obs_D <- paste0("obs_released_",gsub("^obs_|_released$","",nm1_obs_D))
# obs_cv_D (landings cvs)
nm1_obs_cv_D <- inm[grepl("_D_cv",inm)]
nm2_obs_cv_D <- paste0("obs_cv_D_",gsub("_D_cv","",nm1_obs_cv_D))
## CPUE
# styr_cpue
nm1_styr_cpue <- inm[grepl("^styr_.*_cpue$",inm)]
nm2_styr_cpue <- paste0("styr_cpue_",gsub("^styr_|_cpue$","",nm1_styr_cpue))
# endyr_cpue
nm1_endyr_cpue <- inm[grepl("^endyr_.*_cpue$",inm)]
nm2_endyr_cpue <- paste0("endyr_cpue_",gsub("^endyr_|_cpue$","",nm1_endyr_cpue))
# nyr_cpue (not found in most assessments)
nm1_nyr_cpue <- inm[grepl("^nyr_.*_cpue$",inm)]
nm2_nyr_cpue <- paste0("nyr_cpue_",gsub("^nyr_|_cpue$","",nm1_nyr_cpue))
# yrs_cpue (not found in most assessments)
nm1_yrs_cpue <- inm[grepl("^yrs_.*_cpue$",inm)]
nm2_yrs_cpue <- paste0("yrs_cpue_",gsub("^yrs_|_cpue$","",nm1_yrs_cpue))
# obs_cpue
nm1_obs_cpue <- inm[grepl("^obs_.*_cpue$",inm)]
nm2_obs_cpue <- paste0("obs_cpue_",gsub("^obs_|_cpue$","",nm1_obs_cpue))
# obs_cv_cpue (cpue cvs)
nm1_obs_cv_cpue <- inm[grepl("_cpue_cv",inm)]
nm2_obs_cv_cpue <- paste0("obs_cv_cpue_",gsub("_cpue_cv","",nm1_obs_cv_cpue))
## Length comps
# nyr_lenc
nm1_nyr_lenc <- inm[grepl("^nyr_.*_lenc$",inm)]
nm2_nyr_lenc <- paste0("nyr_lenc_",gsub("^nyr_|_lenc$","",nm1_nyr_lenc))
# yrs_lenc
nm1_yrs_lenc <- inm[grepl("^yrs_.*_lenc$",inm)]
nm2_yrs_lenc <- paste0("yrs_lenc_",gsub("^yrs_|_lenc$","",nm1_yrs_lenc))
# nsamp_lenc
nm1_nsamp_lenc <- inm[grepl("^nsamp_.*_lenc$",inm)]
nm2_nsamp_lenc <- paste0("nsamp_lenc_",gsub("^nsamp_|_lenc$","",nm1_nsamp_lenc))
# nfish_lenc
nm1_nfish_lenc <- inm[grepl("^nfish_.*_lenc$",inm)]
nm2_nfish_lenc <- paste0("nfish_lenc_",gsub("^nfish_|_lenc$","",nm1_nfish_lenc))
# obs_lenc
nm1_obs_lenc <- inm[grepl("^obs_.*_lenc$",inm)]
nm2_obs_lenc <- paste0("obs_lenc_",gsub("^obs_|_lenc$","",nm1_obs_lenc))
# pred_lenc (not in dat, but in tpl and cxx)
nm1_pred_lenc <- inm[grepl("^pred_.*_lenc$",inm)]
nm2_pred_lenc <- paste0("pred_lenc_",gsub("^pred_|_lenc$","",nm1_pred_lenc))
# lenc (rearrange and replace remaining variable names)
nm1_lenc <- paste(gsub("obs_","",nm1_obs_lenc))
nm2_lenc <- paste("lenc",gsub("_lenc","",nm1_lenc),sep="_")
## Length comps pooled (not in most assessments)
# nyr_lenc_pool
nm1_nyr_lenc_pool <- inm[grepl("^nyr_.*_lenc_pool$",inm)]
nm2_nyr_lenc_pool <- paste0("nyr_lenc_pool_",gsub("^nyr_|_lenc_pool$","",nm1_nyr_lenc_pool))
# yrs_lenc_pool
nm1_yrs_lenc_pool <- inm[grepl("^yrs_.*_lenc_pool$",inm)]
nm2_yrs_lenc_pool <- paste0("yrs_lenc_pool_",gsub("^yrs_|_lenc_pool$","",nm1_yrs_lenc_pool))
# nsamp_lenc_pool
nm1_nsamp_lenc_pool <- inm[grepl("^nsamp_.*_lenc_pool$",inm)]
nm2_nsamp_lenc_pool <- paste0("nsamp_lenc_pool_",gsub("^nsamp_|_lenc_pool$","",nm1_nsamp_lenc_pool))
# nfish_lenc_pool
nm1_nfish_lenc_pool <- inm[grepl("^nfish_.*_lenc_pool$",inm)]
nm2_nfish_lenc_pool <- paste0("nfish_lenc_pool_",gsub("^nfish_|_lenc_pool$","",nm1_nfish_lenc_pool))
# obs_lenc_pool
nm1_obs_lenc_pool <- inm[grepl("^obs_.*_lenc_pool$",inm)]
nm2_obs_lenc_pool <- paste0("obs_lenc_pool_",gsub("^obs_|_lenc_pool$","",nm1_obs_lenc_pool))
# pred_lenc_pool (not in dat, but in tpl and cxx)
nm1_pred_lenc_pool <- inm[grepl("^pred_.*_lenc_pool$",inm)]
nm2_pred_lenc_pool <- paste0("pred_lenc_pool_",gsub("^pred_|_lenc_pool$","",nm1_pred_lenc_pool))
## Age comps
# nyr_agec
nm1_nyr_agec <- inm[grepl("^nyr_.*_agec$",inm)]
nm2_nyr_agec <- paste0("nyr_agec_",gsub("^nyr_|_agec$","",nm1_nyr_agec))
# yrs_agec
nm1_yrs_agec <- inm[grepl("^yrs_.*_agec$",inm)]
nm2_yrs_agec <- paste0("yrs_agec_",gsub("^yrs_|_agec$","",nm1_yrs_agec))
# nsamp_agec
nm1_nsamp_agec <- inm[grepl("^nsamp_.*_agec$",inm)]
nm2_nsamp_agec <- paste0("nsamp_agec_",gsub("^nsamp_|_agec$","",nm1_nsamp_agec))
# nfish_agec
nm1_nfish_agec <- inm[grepl("^nfish_.*_agec$",inm)]
nm2_nfish_agec <- paste0("nfish_agec_",gsub("^nfish_|_agec$","",nm1_nfish_agec))
# obs_agec
nm1_obs_agec <- inm[grepl("^obs_.*_agec$",inm)]
nm2_obs_agec <- paste0("obs_agec_",gsub("^obs_|_agec$","",nm1_obs_agec))
# pred_agec (not in dat, but in tpl and cxx)
nm1_pred_agec <- inm[grepl("^pred_.*_agec$",inm)]
nm2_pred_agec <- paste0("pred_agec_",gsub("^pred_|_agec$","",nm1_pred_agec))
# agec (rearrange and replace remaining variable names)
nm1_agec <- paste(gsub("obs_","",nm1_obs_agec))
nm2_agec <- paste("agec",gsub("_agec","",nm1_agec),sep="_")
## Age comps pooled (not in most assessments)
# nyr_agec_pool
nm1_nyr_agec_pool <- inm[grepl("^nyr_.*_agec_pool$",inm)]
nm2_nyr_agec_pool <- paste0("nyr_agec_pool_",gsub("^nyr_|_agec_pool$","",nm1_nyr_agec_pool))
# yrs_agec_pool
nm1_yrs_agec_pool <- inm[grepl("^yrs_.*_agec_pool$",inm)]
nm2_yrs_agec_pool <- paste0("yrs_agec_pool_",gsub("^yrs_|_agec_pool$","",nm1_yrs_agec_pool))
# nsamp_agec_pool
nm1_nsamp_agec_pool <- inm[grepl("^nsamp_.*_agec_pool$",inm)]
nm2_nsamp_agec_pool <- paste0("nsamp_agec_pool_",gsub("^nsamp_|_agec_pool$","",nm1_nsamp_agec_pool))
# nfish_agec_pool
nm1_nfish_agec_pool <- inm[grepl("^nfish_.*_agec_pool$",inm)]
nm2_nfish_agec_pool <- paste0("nfish_agec_pool_",gsub("^nfish_|_agec_pool$","",nm1_nfish_agec_pool))
# obs_agec_pool
nm1_obs_agec_pool <- inm[grepl("^obs_.*_agec_pool$",inm)]
nm2_obs_agec_pool <- paste0("obs_agec_pool_",gsub("^obs_|_agec_pool$","",nm1_obs_agec_pool))
# pred_agec_pool (not in dat, but in tpl and cxx)
nm1_pred_agec_pool <- inm[grepl("^pred_.*_agec_pool$",inm)]
nm2_pred_agec_pool <- paste0("pred_agec_pool_",gsub("^pred_|_agec_pool$","",nm1_pred_agec_pool))
## minSS
nm1_minSS_lenc <- inm[grepl("^minSS_.*_lenc$",inm)]
nm2_minSS_lenc <- paste0("minSS_lenc_",gsub("minSS_|_lenc","",nm1_minSS_lenc))
nm1_minSS_agec <- inm[grepl("^minSS_.*_agec$",inm)]
nm2_minSS_agec <- paste0("minSS_agec_",gsub("minSS_|_agec","",nm1_minSS_agec))
## set_ parameters
# set_log_dm_lenc
nm1_set_log_dm_lenc <- inm[grepl("^set_log_dm_.*_lc$",inm)]
nm2_set_log_dm_lenc <- paste0("set_log_dm_lenc_",gsub("^set_log_dm_|_lc$","",nm1_set_log_dm_lenc))
# set_log_dm_agec
nm1_set_log_dm_agec <- inm[grepl("^set_log_dm_.*_ac$",inm)]
nm2_set_log_dm_agec <- paste0("set_log_dm_agec_",gsub("^set_log_dm_|_ac$","",nm1_set_log_dm_agec))
# set_log_q_cpue
nm1_set_log_q_cpue <- inm[grepl("^set_log_q_|set_logq_",inm)]
nm2_set_log_q_cpue <- paste0("set_log_q_cpue_",gsub("^set_log_q_|set_logq_|cpue_","",nm1_set_log_q_cpue))
# F pars for landings (L)
# set_log_avg_F_L
# nm1_set_log_avg_F_L <- inm[grepl("^set_log_avg_F_.*[^D]$",inm)]
#nm1_set_log_avg_F_L <- inm[grepl("^set_log_avg_F_(?![LD]_).*[^_D]$",inm,perl = TRUE)]
nm1_set_log_avg_F_L <- inm[grepl("^set_log_avg_F_(?![LD]_)(?!.*_D$)",inm,perl = TRUE)]
nm2_set_log_avg_F_L <- paste0("set_log_avg_F_L_",gsub("^set_log_avg_F_","",nm1_set_log_avg_F_L))
inm[grepl("^set_log_F_dev(?!.*_D_)(?!.*_D$).*(?=.*vals)",inm,perl=TRUE)]
inm
inputData_RedPorgy
library(bamExtras)
library(bamExtras)
library(bamExtras)
library(bamExtras)
library(bamMSE)
View(rdat_to_cpars)
View(rdat_to_Data)
library(bamExtras)
CommonName <- "GrayTriggerfish"
wd <- getwd()
message(paste("working directory:",wd))
if(!is.null(CommonName)){
fileName <- CommonName
dat <- get(paste0("dat_",CommonName))
tpl <- get(paste0("tpl_",CommonName))
cxx <- get(paste0("cxx_",CommonName))
}
if(standardize){
message("Running bamExtras::standardize_bam()")
bam <- standardize_bam(dat_obj=dat, tpl_obj=tpl,cxx_obj=cxx)
dat <- bam$dat
tpl <- bam$tpl
cxx <- bam$cxx
}
message("Running bamExtras::standardize_bam()")
bam <- standardize_bam(dat_obj=dat, tpl_obj=tpl,cxx_obj=cxx)
dat <- bam$dat
tpl <- bam$tpl
cxx <- bam$cxx
regex <- "(?<=const double )(.*?)(?==)"
names_const_double <- str_extract_all(tpl,regex)
library(stringr)
names_const_double <- str_extract_all(tpl,regex)
names_const_double
unlist(names_const_double)
length(unlist(names_const_double))
tpl_object_classes <- c("const double")
regex_A <- "(?<="
regex_Z <- " )(.*?)(?==)"
tpl_object_classes <- c("const double")
tpl_names <- list()
for(class_i in tpl_object_classes){
tpl_names[[class_i]] <- unlist(str_extract_all(tpl,paste0(regex_A,"const double", regex_Z)))
}
tpl_names
diff(1:10)
?par
x <- rnorm(5);y <- rnorm(5);plot(x,y)
x <- rnorm(5);y <- rnorm(5);plot(x,y);polygon(c(x,rev(x),c(y,rev(y))))
x <- rnorm(5);y <- rnorm(5);plot(x,y);polygon(c(x,rev(x)),c(y,rev(y)))
x <- rnorm(5);y <- rnorm(5);plot(x,y);polygon(c(x,rev(x)),c(y,rev(y)),col=rgb(1,0,0,0.5))
?polygon
x <- rnorm(5);y <- 1:5;plot(x,y);polygon(c(x,rev(x)),c(y,rev(y)),col=rgb(1,0,0,0.5))
x <- 1:5;y <- rnorm(5);plot(x,y);polygon(c(x,rev(x)),c(y,rev(y)),col=rgb(1,0,0,0.5))
c(x,rev(x))
c(y,rev(y))
x <- 1:6;y <- rnorm(6);plot(x,y);polygon(c(x,rev(x)),c(y,rev(y)),col=rgb(1,0,0,0.5))
x <- 1:6;y <- rnorm(6);plot(x,y);polygon(c(x,rev(x)),c(y,rev(y+2)),col=rgb(1,0,0,0.5))
x <- 1:6;y <- rnorm(6);plot(c(x,rev(x)),c(y,rev(y+2));polygon(c(x,rev(x)),c(y,rev(y+2)),col=rgb(1,0,0,0.5))
x <- 1:6;y <- rnorm(6);plot(c(x,rev(x)),c(y,rev(y+2)));polygon(c(x,rev(x)),c(y,rev(y+2)),col=rgb(1,0,0,0.5))
par("ljoin")
par(ljoin="mitre");x <- 1:6;y <- rnorm(6);plot(c(x,rev(x)),c(y,rev(y+2)));polygon(c(x,rev(x)),c(y,rev(y+2)),col=rgb(1,0,0,0.5))
par(ljoin="mitre");x <- 1:6;y <- rnorm(6);plot(c(x,rev(x)),c(y,rev(y+2)),col="blue",pch=16);polygon(c(x,rev(x)),c(y,rev(y+2)),col=rgb(1,0,0,0.5))
par(ljoin="mitre");x <- 1:6;y <- rnorm(6);plot(c(x,rev(x)),c(y,rev(y+2)),col="blue",pch=16);polygon(c(x,rev(x)),c(y,rev(y+2)),col=rgb(1,0,0,0.5),lwd=4)
par(ljoin="mitre");x <- 1:6;y <- rnorm(6);plot(c(x,rev(x)),c(y,rev(y+2)),col="blue",pch=16);polygon(c(x,rev(x)),c(y,rev(y+2)),col=rgb(1,0,0,0.5),lwd=10)
par(ljoin="mitre");x <- 1:6;y <- rnorm(6);plot(c(x,rev(x)),c(y,rev(y+2)),col="blue",pch=16);polygon(c(x,rev(x)),c(y,rev(y+2)),col=rgb(1,0,0,0.5),lwd=10);points(c(x,rev(x)),c(y,rev(y+2)),col="yellow",pch=16)
par(ljoin="mitre");x <- 1:6;y <- rnorm(6);plot(c(x,rev(x)),c(y,rev(y+2)),col="blue",pch=16);polygon(c(x,rev(x)),c(y,rev(y+2)),col=rgb(1,0,0,0.5),lwd=20);points(c(x,rev(x)),c(y,rev(y+2)),col="yellow",pch=16)
par(ljoin="mitre",lmitre=1);x <- 1:6;y <- rnorm(6);plot(c(x,rev(x)),c(y,rev(y+2)),col="blue",pch=16);polygon(c(x,rev(x)),c(y,rev(y+2)),col=rgb(1,0,0,0.5),lwd=20);points(c(x,rev(x)),c(y,rev(y+2)),col="yellow",pch=16)
par(ljoin="mitre",lmitre=10);x <- 1:6;y <- rnorm(6);plot(c(x,rev(x)),c(y,rev(y+2)),col="blue",pch=16);polygon(c(x,rev(x)),c(y,rev(y+2)),col=rgb(1,0,0,0.5),lwd=20);points(c(x,rev(x)),c(y,rev(y+2)),col="yellow",pch=16)
par(ljoin="mitre",lmitre=10);x <- 1:6;y <- rnorm(6);plot(c(x,rev(x)),c(y,rev(y+2)),col="blue",pch=16);polygon(c(x,rev(x)),c(y,rev(y+2)),col=rgb(1,0,0,0.5),lwd=20);points(c(x,rev(x)),c(y,rev(y+2)),col="yellow",pch=16)
par(ljoin="mitre",lmitre=10);x <- 1:6;y <- rnorm(6);plot(c(x,rev(x)),c(y,rev(y+2)),col="blue",pch=16);polygon(c(x,rev(x)),c(y,rev(y+2)),col=rgb(1,0,0,0.5),lwd=20);points(c(x,rev(x)),c(y,rev(y+2)),col="yellow",pch=16)
par(ljoin="mitre",lmitre=10);x <- 1:6;y <- rnorm(6,sd=10);plot(c(x,rev(x)),c(y,rev(y+2)),col="blue",pch=16);polygon(c(x,rev(x)),c(y,rev(y+2)),col=rgb(1,0,0,0.5),lwd=20);points(c(x,rev(x)),c(y,rev(y+2)),col="yellow",pch=16)
par(ljoin="mitre",lmitre=10);x <- 1:6;y <- rnorm(6,sd=10);plot(c(x,rev(x)),c(y,rev(y+2)),col="blue",pch=16);polygon(c(x,rev(x)),c(y,rev(y+2)),col=rgb(1,0,0,0.5),lwd=20);points(c(x,rev(x)),c(y,rev(y+2)),col="yellow",pch=16)
par(ljoin="mitre",lmitre=10);x <- 1:6;y <- rnorm(6,sd=10);plot(c(x,rev(x)),c(y,rev(y+5)),col="blue",pch=16);polygon(c(x,rev(x)),c(y,rev(y+5)),col=rgb(1,0,0,0.5),lwd=20);points(c(x,rev(x)),c(y,rev(y+2)),col="yellow",pch=16)
par(ljoin="mitre",lmitre=10);x <- 1:6;y <- rnorm(6,sd=10);plot(c(x,rev(x)),c(y,rev(y+5)),col="blue",pch=16);polygon(c(x,rev(x)),c(y,rev(y+5)),col=rgb(1,0,0,0.5),lwd=20);points(c(x,rev(x)),c(y,rev(y+5)),col="yellow",pch=16)
par(ljoin="mitre",lmitre=10);x <- 1:6;y <- rnorm(6,sd=10);plot(c(x,rev(x)),c(y,rev(y+5)),col="blue",pch=16);polygon(c(x,rev(x)),c(y,rev(y+5)),col=rgb(1,0,0,0.5),lwd=1);points(c(x,rev(x)),c(y,rev(y+5)),col="yellow",pch=16)
par(ljoin="mitre",lmitre=10);x <- 1:6;y <- rnorm(6,sd=10);plot(c(x,rev(x)),c(y,rev(y+5)),col="blue",pch=16);polygon(c(x,rev(x)),c(y,rev(y+5)),col=rgb(1,0,0,0.5),lwd=20);points(c(x,rev(x)),c(y,rev(y+2)),col="yellow",pch=16)
par(ljoin="mitre",lmitre=10);x <- 1:6;y <- rnorm(6,sd=10);plot(c(x,rev(x)),c(y,rev(y+5)),col="blue",pch=16);polygon(c(x,rev(x)),c(y,rev(y+5)),col=rgb(1,0,0,0.5),lwd=20);points(c(x,rev(x)),c(y,rev(y+5)),col="yellow",pch=16)
x <- sample(c(1,0),100,replace=TRUE)
x
sections(x=x)
plot(1:100,x,col=sections(x=x))
plot(1:100,x,col=sections(x=x),pch=16)
plot(1:100,x,col=sections(x=x),pch=16,type="l")
plot(1:100,x,col=sections(x=x),pch=16,type="o")
x <- sample(1:5,100,replace=TRUE);plot(1:100,x,col=sections(x=x),pch=16,type="o")
x <- sample(1:10,100,replace=TRUE);plot(1:100,x,col=sections(x=x),pch=16,type="o")
x <- sample(1:10,100,replace=TRUE);plot(1:100,x,col=sections(x=x,3),pch=16,type="o")
x <- sample(1:10,100,replace=TRUE);plot(1:100,x,col=sections(x=x,3),pch=16,type="o",cex=2)
x <- sample(1:10,100,replace=TRUE);plot(1:100,x,col=sections(x=x,5),pch=16,type="o",cex=2)
x <- sample(1:10,100,replace=TRUE);plot(1:100,x,col=sections(x=x,6),pch=16,type="o",cex=2)
x <- sample(1:10,100,replace=TRUE);plot(1:100,x,col=sections(x=x,9),pch=16,type="o",cex=2)
x <- sample(1:10,100,replace=TRUE);plot(1:100,x,col=sections(x=x,9),pch=16,type="o",cex=2)
x <- sample(1:10,100,replace=TRUE);plot(1:100,x,col=sections(x=x,9),pch=16,type="o",cex=2)
x <- sample(1:10,100,replace=TRUE);plot(1:100,x,col=sections(x=x,9),pch=16,type="o",cex=2)
x <- sample(1:10,100,replace=TRUE);plot(1:100,x,col=sections(x=x,8),pch=16,type="o",cex=2)
x <- sample(1:10,100,replace=TRUE);plot(1:100,x,col=sections(x=x,8),pch=16,type="o",cex=2)
x <- sample(1:10,100,replace=TRUE);plot(1:100,x,col=sections(x=x,8),pch=16,type="o",cex=2)
x <- sample(1:10,100,replace=TRUE);plot(1:100,x,col=sections(x=x,8),pch=16,type="o",cex=2)
x <- sample(1:10,100,replace=TRUE);plot(1:100,x,col=sections(x=x,8),pch=16,type="o",cex=2)
x <- sample(1:10,100,replace=TRUE);plot(1:100,x,col=sections(x=x,8),pch=16,type="o",cex=2)
x <- sample(1:10,100,replace=TRUE);plot(1:100,x,col=sections(x=x,8),pch=16,type="o",cex=2)
x <- sample(1:10,100,replace=TRUE);plot(1:100,x,col=sections(x=x,8),pch=16,type="o",cex=2)
x <- sample(1:10,100,replace=TRUE);plot(1:100,x,col=sections(x=x,8),pch=16,type="o",cex=2)
x <- sample(1:10,100,replace=TRUE);plot(1:100,x,col=sections(x=x,8),pch=16,type="o",cex=2)
x <- sample(1:10,100,replace=TRUE);plot(1:100,x,col=sections(x=x,8),pch=16,type="o",cex=2)
x <- sample(1:10,100,replace=TRUE);plot(1:100,x,col=sections(x=x,8),pch=16,type="o",cex=2)
x <- sample(1:10,100,replace=TRUE);plot(1:100,x,col=sections(x=x,8),pch=16,type="o",cex=2)
x <- sample(1:10,100,replace=TRUE);plot(1:100,x,col=sections(x=x,8),pch=16,type="o",cex=2)
x <- sample(1:10,100,replace=TRUE);plot(1:100,x,col=sections(x=x,8),pch=16,type="o",cex=2)
x <- sample(1:10,100,replace=TRUE);plot(1:100,x,col=sections(x=x,8),pch=16,type="o",cex=2)
x <- sample(1:10,100,replace=TRUE);plot(1:100,x,col=sections(x=x,8),pch=16,type="o",cex=2)
1:99
seq(1,100,by=3)
seq(1,100,by=4)
seq(0,100,by=4)
rep(1:4,3)
rep(1:4,length=10)
rep(1:4,3)
matrix(rep(1:4,3),nrow=3)
matrix(rep(1:4,3),ncol =3)
