cc_list[1]
cc_list[2]
cc_list[[2]]
# Plot comps and add catch curves (note the log-tranformation of the composition data)
comp_plot(log(comp_i),cc=cc,fillComp = FALSE,ylab= "log(proportion)",xlab="age",title="black sea bass commercial handline catch curves")
# Plot Z estimates over time
cc_list <- lapply(acomp,catch_curve)
for(i in 1:length(cc_list)){
xi <- cc_list[[i]]
year <- xi$year
Z <- -xi$slope
if(i==1){
plot(year,Z)
}else{
points(year,Z)
}
}
lapply(cc_list,function(x){range(as.numeric(rownames(x)))}
)
lapply(cc_list,function(x){as.numeric(rownames(x))}
lapply(cc_list,function(x){as.numeric(rownames(x))})
unlist(lapply(cc_list,function(x){as.numeric(rownames(x))}))
range(unlist(lapply(cc_list,function(x){as.numeric(rownames(x))})))
range(unlist(lapply(cc_list,function(x){as.numeric(x$year)})))
# Plot Z estimates over time
cc_list <- lapply(acomp,catch_curve)
cols <- rainbow(length(cc_list))
ylim <- range(unlist(lapply(cc_list,function(x){as.numeric(x$year)})))
for(i in 1:length(cc_list)){
xi <- cc_list[[i]]
year <- xi$year
Z <- -xi$slope
if(i==1){
plot(year,Z,ylim=ylim,type="o",col=cols[i])
}else{
points(year,Z,type="o",col=cols[i])
}
}
range(unlist(lapply(cc_list,function(x){as.numeric(x$year)})))xi
xu
xi
i <- 1
xi <- cc_list[[i]]
year <- xi$year
Z <- -xi$slope
xi
year
Z
plot(year,Z,ylim=ylim,type="o",col=cols[i])
plot(year,Z)
ylim
cc_list <- lapply(acomp,catch_curve)
cols <- rainbow(length(cc_list))
xlim <- range(unlist(lapply(cc_list,function(x){as.numeric(x$year)})))
for(i in 1:length(cc_list)){
xi <- cc_list[[i]]
year <- xi$year
Z <- -xi$slope
if(i==1){
plot(year,Z,xlim=xlim,type="o",col=cols[i])
}else{
points(year,Z,type="o",col=cols[i])
}
}
range(unlist(lapply(cc_list,function(x){-as.numeric(x$slope)})))
range(unlist(lapply(cc_list,function(x){-as.numeric(x$slope)})),na.rm=TRUE)
# Plot Z estimates over time
cc_list <- lapply(acomp,catch_curve)
cols <- rainbow(length(cc_list))
xlim <- range(unlist(lapply(cc_list,function(x){as.numeric(x$year)})),na.rm=TRUE)
ylim <- range(unlist(lapply(cc_list,function(x){-as.numeric(x$slope)})),na.rm=TRUE)
for(i in 1:length(cc_list)){
xi <- cc_list[[i]]
year <- xi$year
Z <- -xi$slope
if(i==1){
plot(year,Z,xlim=xlim,ylim=ylim,type="o",col=cols[i])
}else{
points(year,Z,type="o",col=cols[i])
}
}
names(cc_list)
gsub("^(acomp.)|(.ob)$","",names(cc_list))
# Plot Z estimates over time
cc <- lapply(acomp,catch_curve)
abb <- gsub("^(acomp.)|(.ob)$","",names(cc)) # abbreviations of age composition fleets
cols <- rainbow(length(cc))
xlim <- range(unlist(lapply(cc,function(x){as.numeric(x$year)})),na.rm=TRUE)
ylim <- range(unlist(lapply(cc,function(x){-as.numeric(x$slope)})),na.rm=TRUE)
for(i in 1:length(cc)){
xi <- cc[[i]]
year <- xi$year
Z <- -xi$slope
if(i==1){
plot(year,Z,xlim=xlim,ylim=ylim,type="o",col=cols[i])
}else{
points(year,Z,type="o",col=cols[i])
}
}
legend("bottomleft",legend=abb,col=cols)
}
# Plot Z estimates over time
cc <- lapply(acomp,catch_curve)
abb <- gsub("^(acomp.)|(.ob)$","",names(cc)) # abbreviations of age composition fleets
cols <- rainbow(length(cc))
xlim <- range(unlist(lapply(cc,function(x){as.numeric(x$year)})),na.rm=TRUE)
ylim <- range(unlist(lapply(cc,function(x){-as.numeric(x$slope)})),na.rm=TRUE)
for(i in 1:length(cc)){
xi <- cc[[i]]
year <- xi$year
Z <- -xi$slope
if(i==1){
plot(year,Z,xlim=xlim,ylim=ylim,type="o",col=cols[i])
}else{
points(year,Z,type="o",col=cols[i])
}
}
legend("bottomleft",legend=abb,col=cols,pch=1)
}
# Plot Z estimates over time
cc <- lapply(acomp,catch_curve)
abb <- gsub("^(acomp.)|(.ob)$","",names(cc)) # abbreviations of age composition fleets
cols <- rainbow(length(cc))
xlim <- range(unlist(lapply(cc,function(x){as.numeric(x$year)})),na.rm=TRUE)
ylim <- range(unlist(lapply(cc,function(x){-as.numeric(x$slope)})),na.rm=TRUE)
for(i in 1:length(cc)){
xi <- cc[[i]]
year <- xi$year
Z <- -xi$slope
if(i==1){
plot(year,Z,xlim=xlim,ylim=ylim,type="o",col=cols[i])
}else{
points(year,Z,type="o",col=cols[i])
}
}
legend("bottomleft",legend=abb,col=cols,pch=1,lty=1)
}
ylim <- range(c(0,unlist(lapply(cc,function(x){-as.numeric(x$slope)}))),na.rm=TRUE)
# Plot Z estimates over time
cc <- lapply(acomp,catch_curve)
abb <- gsub("^(acomp.)|(.ob)$","",names(cc)) # abbreviations of age composition fleets
cols <- rainbow(length(cc))
xlim <- range(unlist(lapply(cc,function(x){as.numeric(x$year)})),na.rm=TRUE)
ylim <- range(c(0,unlist(lapply(cc,function(x){-as.numeric(x$slope)}))),na.rm=TRUE)
for(i in 1:length(cc)){
xi <- cc[[i]]
year <- xi$year
Z <- -xi$slope
if(i==1){
plot(year,Z,xlim=xlim,ylim=ylim,type="o",col=cols[i])
}else{
points(year,Z,type="o",col=cols[i])
}
}
legend("bottomleft",legend=abb,col=cols,pch=1,lty=1)
}
rdat_BlackSeaBass$parms$M.msst
# Plot Z estimates over time
M <- rdat$parms$M.msst
cc <- lapply(acomp,catch_curve)
abb <- gsub("^(acomp.)|(.ob)$","",names(cc)) # abbreviations of age composition fleets
cols <- rainbow(length(cc))
xlim <- range(unlist(lapply(cc,function(x){as.numeric(x$year)})),na.rm=TRUE)
ylim <- range(c(0,unlist(lapply(cc,function(x){-as.numeric(x$slope)}))),na.rm=TRUE)
for(i in 1:length(cc)){
xi <- cc[[i]]
year <- xi$year
Z <- -xi$slope
if(i==1){
plot(year,Z,xlim=xlim,ylim=ylim,type="o",col=cols[i])
}else{
points(year,Z,type="o",col=cols[i])
}
}
abline(h=M,lty=2,lwd=2)
text(par("usr")[1],M,labels="M")
legend("bottomleft",legend=abb,col=cols,pch=1,lty=1)
M
rdat$parms$M.msst
rdat <- rdat_BlackSeaBass
comp <- rdat$comp.mats # List of composition matrices
acomp <- comp[grepl("^acomp.*.ob$",names(comp))] # list of observed age composition matrices
comp_i <- acomp$acomp.Mcvt.ob
cc_i <- catch_curve(comp_i)
# Plot comps and add catch curves (note the log-tranformation of the composition data)
comp_plot(log(comp_i),cc=cc_i,fillComp = FALSE,ylab= "log(proportion)",xlab="age",title="black sea bass commercial handline catch curves")
# Plot Z estimates over time
M <- rdat$parms$M.msst
cc <- lapply(acomp,catch_curve)
abb <- gsub("^(acomp.)|(.ob)$","",names(cc)) # abbreviations of age composition fleets
cols <- rainbow(length(cc))
xlim <- range(unlist(lapply(cc,function(x){as.numeric(x$year)})),na.rm=TRUE)
ylim <- range(c(0,unlist(lapply(cc,function(x){-as.numeric(x$slope)}))),na.rm=TRUE)
for(i in 1:length(cc)){
xi <- cc[[i]]
year <- xi$year
Z <- -xi$slope
if(i==1){
plot(year,Z,xlim=xlim,ylim=ylim,type="o",col=cols[i])
}else{
points(year,Z,type="o",col=cols[i])
}
}
abline(h=M,lty=2,lwd=2)
text(par("usr")[1],M,labels="M")
legend("bottomleft",legend=abb,col=cols,pch=1,lty=1)
}
# Plot Z estimates over time
M <- rdat$parms$M.msst
cc <- lapply(acomp,catch_curve)
abb <- gsub("^(acomp.)|(.ob)$","",names(cc)) # abbreviations of age composition fleets
cols <- rainbow(length(cc))
xlim <- range(unlist(lapply(cc,function(x){as.numeric(x$year)})),na.rm=TRUE)
ylim <- range(c(0,unlist(lapply(cc,function(x){-as.numeric(x$slope)}))),na.rm=TRUE)
for(i in 1:length(cc)){
xi <- cc[[i]]
year <- xi$year
Z <- -xi$slope
if(i==1){
plot(year,Z,xlim=xlim,ylim=ylim,type="o",col=cols[i])
}else{
points(year,Z,type="o",col=cols[i])
}
}
abline(h=M,lty=2,lwd=2)
text(par("usr")[1],M,labels="M")
legend("bottomleft",legend=abb,col=cols,pch=1,lty=1)
text(par("usr")[1],M,labels="M",pos=4)
text(par("usr")[1],M,labels="M",pos=3)
text(par("usr")[1]+0.1*diff(par("usr")[1:2]),M,labels="M",pos=3)
# Plot Z estimates over time
M <- rdat$parms$M.msst
cc <- lapply(acomp,catch_curve)
abb <- gsub("^(acomp.)|(.ob)$","",names(cc)) # abbreviations of age composition fleets
cols <- rainbow(length(cc))
xlim <- range(unlist(lapply(cc,function(x){as.numeric(x$year)})),na.rm=TRUE)
ylim <- range(c(0,unlist(lapply(cc,function(x){-as.numeric(x$slope)}))),na.rm=TRUE)
for(i in 1:length(cc)){
xi <- cc[[i]]
year <- xi$year
Z <- -xi$slope
if(i==1){
plot(year,Z,xlim=xlim,ylim=ylim,type="o",col=cols[i])
}else{
points(year,Z,type="o",col=cols[i])
}
}
abline(h=M,lty=2,lwd=2)
text(par("usr")[1]+0.05*diff(par("usr")[1:2]),M,labels="M",pos=3)
legend("bottomleft",legend=abb,col=cols,pch=1,lty=1)
# read in black ses bass age comps used in the recent stock assessment
rdat <- rdat_BlackSeaBass
comp <- rdat$comp.mats # List of composition matrices
acomp <- comp[grepl("^acomp.*.ob$",names(comp))] # list of observed age composition matrices
comp_i <- acomp$acomp.Mcvt.ob
cc_i <- catch_curve(comp_i)
# Plot comps and add catch curves (note the log-tranformation of the composition data)
comp_plot(log(comp_i),cc=cc_i,fillComp = FALSE,ylab= "log(proportion)",xlab="age",title="black sea bass commercial handline catch curves")
# Plot Z estimates over time for multiple sets of age compositions
M <- rdat$parms$M.msst
cc <- lapply(acomp,catch_curve)
abb <- gsub("^(acomp.)|(.ob)$","",names(cc)) # abbreviations of age composition fleets
cols <- rainbow(length(cc))
xlim <- range(unlist(lapply(cc,function(x){as.numeric(x$year)})),na.rm=TRUE)
ylim <- range(c(0,unlist(lapply(cc,function(x){-as.numeric(x$slope)}))),na.rm=TRUE)
for(i in 1:length(cc)){
xi <- cc[[i]]
year <- xi$year
Z <- -xi$slope
if(i==1){
plot(year,Z,xlim=xlim,ylim=ylim,type="o",col=cols[i])
}else{
points(year,Z,type="o",col=cols[i])
}
}
# Add reference line for natural mortality
abline(h=M,lty=2,lwd=2)
text(par("usr")[1]+0.05*diff(par("usr")[1:2]),M,labels="M",pos=3)
legend("bottomleft",legend=abb,col=cols,pch=1,lty=1)
# read in black ses bass age comps used in the recent stock assessment
rdat <- rdat_BlackSeaBass
comp <- rdat$comp.mats # List of composition matrices
acomp <- comp[grepl("^acomp.*.ob$",names(comp))] # list of observed age composition matrices
comp_i <- acomp$acomp.Mcvt.ob
cc_i <- catch_curve(comp_i)
# Plot comps and add catch curves (note the log-tranformation of the composition data)
comp_plot(log(comp_i),cc=cc_i,fillComp = FALSE,ylab= "log(proportion)",xlab="age",title="black sea bass commercial handline catch curves")
# Plot Z estimates over time for multiple sets of age compositions
par(mfrow=c(1,1))
M <- rdat$parms$M.msst
cc <- lapply(acomp,catch_curve)
abb <- gsub("^(acomp.)|(.ob)$","",names(cc)) # abbreviations of age composition fleets
cols <- rainbow(length(cc))
xlim <- range(unlist(lapply(cc,function(x){as.numeric(x$year)})),na.rm=TRUE)
ylim <- range(c(0,unlist(lapply(cc,function(x){-as.numeric(x$slope)}))),na.rm=TRUE)
for(i in 1:length(cc)){
xi <- cc[[i]]
year <- xi$year
Z <- -xi$slope
if(i==1){
plot(year,Z,xlim=xlim,ylim=ylim,type="o",col=cols[i])
}else{
points(year,Z,type="o",col=cols[i])
}
}
# Add reference line for natural mortality
abline(h=M,lty=2,lwd=2)
text(par("usr")[1]+0.05*diff(par("usr")[1:2]),M,labels="M",pos=3)
legend("bottomleft",legend=abb,col=cols,pch=1,lty=1)
# Plot Z estimates over time for multiple sets of age compositions
par(mfrow=c(1,1),mgp=c(1,.2,0))
M <- rdat$parms$M.msst
cc <- lapply(acomp,catch_curve)
abb <- gsub("^(acomp.)|(.ob)$","",names(cc)) # abbreviations of age composition fleets
cols <- rainbow(length(cc))
xlim <- range(unlist(lapply(cc,function(x){as.numeric(x$year)})),na.rm=TRUE)
ylim <- range(c(0,unlist(lapply(cc,function(x){-as.numeric(x$slope)}))),na.rm=TRUE)
for(i in 1:length(cc)){
xi <- cc[[i]]
year <- xi$year
Z <- -xi$slope
if(i==1){
plot(year,Z,xlim=xlim,ylim=ylim,type="o",col=cols[i])
}else{
points(year,Z,type="o",col=cols[i])
}
}
# Add reference line for natural mortality
abline(h=M,lty=2,lwd=2)
text(par("usr")[1]+0.05*diff(par("usr")[1:2]),M,labels="M",pos=3)
legend("bottomleft",legend=abb,col=cols,pch=1,lty=1)
# Plot Z estimates over time for multiple sets of age compositions
par(mfrow=c(1,1),mgp=c(0.5,.2,0))
M <- rdat$parms$M.msst
cc <- lapply(acomp,catch_curve)
abb <- gsub("^(acomp.)|(.ob)$","",names(cc)) # abbreviations of age composition fleets
cols <- rainbow(length(cc))
xlim <- range(unlist(lapply(cc,function(x){as.numeric(x$year)})),na.rm=TRUE)
ylim <- range(c(0,unlist(lapply(cc,function(x){-as.numeric(x$slope)}))),na.rm=TRUE)
for(i in 1:length(cc)){
xi <- cc[[i]]
year <- xi$year
Z <- -xi$slope
if(i==1){
plot(year,Z,xlim=xlim,ylim=ylim,type="o",col=cols[i])
}else{
points(year,Z,type="o",col=cols[i])
}
}
# Add reference line for natural mortality
abline(h=M,lty=2,lwd=2)
text(par("usr")[1]+0.05*diff(par("usr")[1:2]),M,labels="M",pos=3)
legend("bottomleft",legend=abb,col=cols,pch=1,lty=1)
# Plot Z estimates over time for multiple sets of age compositions
par(mfrow=c(1,1),mgp=c(0.5,.2,0),mar=c(3,3,1,1))
M <- rdat$parms$M.msst
cc <- lapply(acomp,catch_curve)
abb <- gsub("^(acomp.)|(.ob)$","",names(cc)) # abbreviations of age composition fleets
cols <- rainbow(length(cc))
xlim <- range(unlist(lapply(cc,function(x){as.numeric(x$year)})),na.rm=TRUE)
ylim <- range(c(0,unlist(lapply(cc,function(x){-as.numeric(x$slope)}))),na.rm=TRUE)
for(i in 1:length(cc)){
xi <- cc[[i]]
year <- xi$year
Z <- -xi$slope
if(i==1){
plot(year,Z,xlim=xlim,ylim=ylim,type="o",col=cols[i])
}else{
points(year,Z,type="o",col=cols[i])
}
}
# Add reference line for natural mortality
abline(h=M,lty=2,lwd=2)
text(par("usr")[1]+0.05*diff(par("usr")[1:2]),M,labels="M",pos=3)
legend("bottomleft",legend=abb,col=cols,pch=1,lty=1)
}
# Plot Z estimates over time for multiple sets of age compositions
par(mfrow=c(1,1),mgp=c(1,.2,0),mar=c(2,2,1,1))
M <- rdat$parms$M.msst
cc <- lapply(acomp,catch_curve)
abb <- gsub("^(acomp.)|(.ob)$","",names(cc)) # abbreviations of age composition fleets
cols <- rainbow(length(cc))
xlim <- range(unlist(lapply(cc,function(x){as.numeric(x$year)})),na.rm=TRUE)
ylim <- range(c(0,unlist(lapply(cc,function(x){-as.numeric(x$slope)}))),na.rm=TRUE)
for(i in 1:length(cc)){
xi <- cc[[i]]
year <- xi$year
Z <- -xi$slope
if(i==1){
plot(year,Z,xlim=xlim,ylim=ylim,type="o",col=cols[i])
}else{
points(year,Z,type="o",col=cols[i])
}
}
# Add reference line for natural mortality
abline(h=M,lty=2,lwd=2)
text(par("usr")[1]+0.05*diff(par("usr")[1:2]),M,labels="M",pos=3)
legend("bottomleft",legend=abb,col=cols,pch=1,lty=1)
# Plot Z estimates over time for multiple sets of age compositions
par(mfrow=c(1,1),mgp=c(1,.2,0),mar=c(2,2,1,1))
M <- rdat$parms$M.msst
cc <- lapply(acomp,catch_curve)
abb <- gsub("^(acomp.)|(.ob)$","",names(cc)) # abbreviations of age composition fleets
cols <- rainbow(length(cc))
xlim <- range(unlist(lapply(cc,function(x){as.numeric(x$year)})),na.rm=TRUE)
ylim <- range(c(0,unlist(lapply(cc,function(x){-as.numeric(x$slope)}))),na.rm=TRUE)
for(i in 1:length(cc)){
xi <- cc[[i]]
year <- xi$year
Z <- -xi$slope
if(i==1){
plot(year,Z,xlim=xlim,ylim=ylim,type="o",col=cols[i])
}else{
points(year,Z,type="o",col=cols[i])
}
}
# Add reference line for natural mortality
abline(h=M,lty=2,lwd=2)
text(par("usr")[1]+0.05*diff(par("usr")[1:2]),M,labels="M",pos=3)
legend("bottomleft",legend=abb,col=cols,pch=1,lty=1,bty="n")
# Plot Z estimates over time for multiple sets of age compositions
par(mfrow=c(1,1),mgp=c(1,.2,0),mar=c(1.5,1.5,1,1))
M <- rdat$parms$M.msst
cc <- lapply(acomp,catch_curve)
abb <- gsub("^(acomp.)|(.ob)$","",names(cc)) # abbreviations of age composition fleets
cols <- rainbow(length(cc))
xlim <- range(unlist(lapply(cc,function(x){as.numeric(x$year)})),na.rm=TRUE)
ylim <- range(c(0,unlist(lapply(cc,function(x){-as.numeric(x$slope)}))),na.rm=TRUE)
for(i in 1:length(cc)){
xi <- cc[[i]]
year <- xi$year
Z <- -xi$slope
if(i==1){
plot(year,Z,xlim=xlim,ylim=ylim,type="o",col=cols[i])
}else{
points(year,Z,type="o",col=cols[i])
}
}
# Add reference line for natural mortality
abline(h=M,lty=2,lwd=2)
text(par("usr")[1]+0.05*diff(par("usr")[1:2]),M,labels="M",pos=3)
legend("bottomleft",legend=abb,col=cols,pch=1,lty=1,bty="n")
# Plot Z estimates over time for multiple sets of age compositions
par(mfrow=c(1,1),mgp=c(1,.2,0),mar=c(2,2,1,1),oma=c(0,0,0,0))
M <- rdat$parms$M.msst
cc <- lapply(acomp,catch_curve)
abb <- gsub("^(acomp.)|(.ob)$","",names(cc)) # abbreviations of age composition fleets
cols <- rainbow(length(cc))
xlim <- range(unlist(lapply(cc,function(x){as.numeric(x$year)})),na.rm=TRUE)
ylim <- range(c(0,unlist(lapply(cc,function(x){-as.numeric(x$slope)}))),na.rm=TRUE)
for(i in 1:length(cc)){
xi <- cc[[i]]
year <- xi$year
Z <- -xi$slope
if(i==1){
plot(year,Z,xlim=xlim,ylim=ylim,type="o",col=cols[i])
}else{
points(year,Z,type="o",col=cols[i])
}
}
# Add reference line for natural mortality
abline(h=M,lty=2,lwd=2)
text(par("usr")[1]+0.05*diff(par("usr")[1:2]),M,labels="M",pos=3)
legend("bottomleft",legend=abb,col=cols,pch=1,lty=1,bty="n")
# Plot Z estimates over time for multiple sets of age compositions
par(mfrow=c(1,1),mgp=c(1,.2,0),mar=c(2,2,1,1),oma=c(0,0,0,0),tck=-0.01)
M <- rdat$parms$M.msst
cc <- lapply(acomp,catch_curve)
abb <- gsub("^(acomp.)|(.ob)$","",names(cc)) # abbreviations of age composition fleets
cols <- rainbow(length(cc))
xlim <- range(unlist(lapply(cc,function(x){as.numeric(x$year)})),na.rm=TRUE)
ylim <- range(c(0,unlist(lapply(cc,function(x){-as.numeric(x$slope)}))),na.rm=TRUE)
for(i in 1:length(cc)){
xi <- cc[[i]]
year <- xi$year
Z <- -xi$slope
if(i==1){
plot(year,Z,xlim=xlim,ylim=ylim,type="o",col=cols[i])
}else{
points(year,Z,type="o",col=cols[i])
}
}
# Add reference line for natural mortality
abline(h=M,lty=2,lwd=2)
text(par("usr")[1]+0.05*diff(par("usr")[1:2]),M,labels="M",pos=3)
legend("bottomleft",legend=abb,col=cols,pch=1,lty=1,bty="n")
# Plot Z estimates over time for multiple sets of age compositions
par(mfrow=c(1,1),mgp=c(1,.2,0),mar=c(2,2,1,1),oma=c(0,0,0,0),tck=0.01)
M <- rdat$parms$M.msst
cc <- lapply(acomp,catch_curve)
abb <- gsub("^(acomp.)|(.ob)$","",names(cc)) # abbreviations of age composition fleets
cols <- rainbow(length(cc))
xlim <- range(unlist(lapply(cc,function(x){as.numeric(x$year)})),na.rm=TRUE)
ylim <- range(c(0,unlist(lapply(cc,function(x){-as.numeric(x$slope)}))),na.rm=TRUE)
for(i in 1:length(cc)){
xi <- cc[[i]]
year <- xi$year
Z <- -xi$slope
if(i==1){
plot(year,Z,xlim=xlim,ylim=ylim,type="o",col=cols[i])
}else{
points(year,Z,type="o",col=cols[i])
}
}
# Add reference line for natural mortality
abline(h=M,lty=2,lwd=2)
text(par("usr")[1]+0.05*diff(par("usr")[1:2]),M,labels="M",pos=3)
legend("bottomleft",legend=abb,col=cols,pch=1,lty=1,bty="n")
source("~/GitHub/myPackages/bamExtras/update.package.bamExtras.r")
setwd("~/GitHub/myPackages/bamExtras")
source("~/GitHub/myPackages/bamExtras/update.package.bamExtras.r")
source("~/GitHub/myPackages/bamExtras/update.package.bamExtras.r")
